{
  "info": {
    "_postman_id": "ebfa6c75-7385-47e4-89e2-e7769174325f",
    "name": "Mage Cloud",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "30cc63a6-e9a0-487a-94b8-66d7590a5458",
      "name": "oAuth2",
      "item": [
        {
          "_postman_id": "170b5184-5b15-4dc4-b5f9-877925afd6d0",
          "name": "Token: client_credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1e0e280-a6cd-499c-b353-2e9bb4695a0a",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"guest-access-token\", jsonData.access_token);",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "    pm.response.to.not.have.jsonBody('refresh_token');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "fb066dfb-b1d2-452b-9079-f81c98fbd2ad",
          "name": "Token: password",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "655aca92-7b3a-43c5-98cf-f8b614d02964",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"refresh-token\", jsonData.refresh_token);",
                  "    pm.environment.set(\"customer-access-token\", jsonData.access_token);",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('refresh_token');",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"password\",\n  \"username\": \"{{username1}}\",\n  \"password\": \"{{password}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "e9679620-6e1b-4508-a9ba-07e943a368c8",
          "name": "Token: password (user2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "53376f26-24e1-4e9d-ad88-41b72df911fc",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"customer-access-token-2\", jsonData.access_token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"password\",\n  \"username\": \"{{username2}}\",\n  \"password\": \"{{password}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "f1ba632f-51b5-42ef-b854-4a0fab71bcf1",
          "name": "Token: authorization_code",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e455c6e7-0555-4b6e-a1e9-e4df1e547257",
                "type": "text/javascript",
                "exec": [
                  "if (false) { //skip for now as there is no good way to test",
                  "    if (responseCode.code === 200) {",
                  "        var jsonData = pm.response.json();",
                  "        pm.environment.set(\"guest-access-token\", jsonData.access_token);",
                  "    }",
                  "    ",
                  "    pm.test('Successfull call', function(){",
                  "        pm.response.to.be.success;",
                  "    });",
                  "    ",
                  "    pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "        var jsonData = pm.response.json();",
                  "        pm.response.to.have.jsonBody('token_type','Bearer');",
                  "        pm.response.to.have.jsonBody('expires_in', 3600);",
                  "        pm.response.to.have.jsonBody('access_token');",
                  "        pm.response.to.have.jsonBody('scope', null);",
                  "    });",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "3092705d-cd39-4811-b8df-1c6636d785a4",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"authorization_code\",\n  \"code\": \"1b8e9872e7fb093a71482ea13902f28b2ad1c4e5\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "c1f98e2c-9e1d-4c19-b126-975d66296c93",
          "name": "Token: refresh_token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c3019287-a9f7-445b-af8b-bd18971c4751",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"customer-access-token\", jsonData.access_token);",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"refresh_token\",\n  \"refresh_token\": \"{{refresh-token}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "ca0300d4-1977-48d8-a795-4796e151473e",
          "name": "Token: refresh_token re-use",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d078640e-9115-4b6e-8c25-7a6122a8c838",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test('New access token differs from the old', function() { ",
                  "    pm.expect(pm.environment.get(\"customer-access-token\")).to.not.equal(jsonData.access_token);",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "});",
                  "",
                  "if (jsonData.hasOwnProperty('access_token')) {",
                  "  pm.environment.set(\"customer-access-token\", jsonData.access_token);  ",
                  "}",
                  "",
                  "pm.environment.unset(\"refresh-token\");"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"refresh_token\",\n  \"refresh_token\": \"{{refresh-token}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "6fe936a7-7c1e-41d4-84a9-17c0bb81a697",
      "name": "/v2/carts | /v2/carts/:id",
      "item": [
        {
          "_postman_id": "a5e7a2d8-10d9-40c3-9964-a02c0e8cc2b5",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "9a593217-d346-45a4-87fe-e6028a045ffd",
              "name": "Create customer cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a customer cart"
              },
              "response": []
            },
            {
              "_postman_id": "3e45dc58-cb49-4ed9-b0f6-19d64c7fa5ce",
              "name": "Get Cart via ME endpoint",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded cart via ME endpoint\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/me",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "me"
                  ]
                },
                "description": "Creates a customer cart"
              },
              "response": []
            },
            {
              "_postman_id": "ebbcda00-fb78-4e24-b9cf-78bfb619e167",
              "name": "Get cart via {cartId}",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "{{cartId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "be4b9d93-a3e7-448d-b136-c4e07eea60ef",
              "name": "Use bad cartID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Bogus quote cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/000",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "000"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "bcbc6b65-4330-4fe4-8a58-8bbf72972831",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "24b7ce08-5d66-4b95-83d2-7bee74241908",
              "name": "ME endpoint as guest",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"loading ME endpoint as guest fails\"] = responseCode.code === 400;"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/me",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "me"
                  ]
                },
                "description": "calls a ME endpoint"
              },
              "response": []
            },
            {
              "_postman_id": "3862ef7e-fb9c-404c-b627-a221f735b904",
              "name": "Customer Quote as guest",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 403\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "{{cartId}}"
                  ]
                },
                "description": "calls a customer cart as guest"
              },
              "response": []
            },
            {
              "_postman_id": "7d39bc9b-27e7-4944-b6dc-3f7d88593e39",
              "name": "Create guest cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
              },
              "response": []
            },
            {
              "_postman_id": "b08fff0b-ee51-49cf-9cc3-3b12ebbac5dd",
              "name": "Guest Quote as guest",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Loading guest quote as guest\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "{{cartId}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "931825c3-504a-4e80-9809-67ca19209c0d",
      "name": "/v2/carts/:id/items",
      "item": [
        {
          "_postman_id": "0598f6b3-3390-49e6-b9f3-2c95a6667271",
          "name": "Product",
          "item": [
            {
              "_postman_id": "151881ee-6ae2-4541-b1a5-d26262151170",
              "name": "Customer - Add",
              "item": [
                {
                  "_postman_id": "f3b7e984-e6eb-4e18-8001-170534f54ba5",
                  "name": "/carts: customer",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "4776a684-a641-41ce-abe4-aefec88f366b",
                  "name": "Bundle + Configurable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n      \"product_id\": \"447\",\n      \"qty\": 2,\n      \"bundle_option\": {\n        \"23\": \"88\",\n        \"24\": \"91\"\n      },\n      \"bundle_option_qty\": {\n        \"23\": \"3\",\n        \"24\": \"4\"\n      }\n    }\n  },\n  {\n    \"product\": {\n       \"product_id\": \"422\",\n    \t\"qty\": 1,\n    \t\"super_attribute\": {\n           \"92\": \"17\",\n           \"180\": \"76\"\n        }\n    }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "70f24e7a-c2ad-4cc8-9ce0-78cc41f46b1f",
                  "name": "Add Configurable: Skirt",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "6d6a2a0b-1a54-44c1-b198-aa1c32def799",
                  "name": "Add Configurable: Skirt via SKU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"sku\": \"wsd000c\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "6546b716-4e0d-4e20-812c-642e2b4dfc8b",
                  "name": "Bundled",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"447\",\n\t    \"qty\": 2,\n\t    \"bundle_option\": {\n\t      \"23\": \"88\",\n\t      \"24\": \"91\"\n\t    },\n\t    \"bundle_option_qty\": {\n\t      \"23\": \"3\",\n\t      \"24\": \"4\"\n\t    }\n\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
                  },
                  "response": []
                },
                {
                  "_postman_id": "4140994c-62f6-4d7c-a26d-383c8faa4c89",
                  "name": "Downloadable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"563\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
                  },
                  "response": []
                },
                {
                  "_postman_id": "8164df41-01e9-4aed-9092-4d4270afd691",
                  "name": "Grouped",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"439\",\n\t    \"qty\": 1,\n\t    \"super_group\": {\n\t      \"541\" : 2\n\t    }\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
                  },
                  "response": []
                },
                {
                  "_postman_id": "24e60a99-7419-4014-858b-4f282bcde104",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "f3c5506a-f20b-4046-b551-dabf060e9a39",
                  "name": "GiftCard Combined",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "80c8e513-1bca-429b-a1fb-9b129d4f7efe",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif001\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"75\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Combined type Gift card with custom price"
                  },
                  "response": []
                },
                {
                  "_postman_id": "66990a3c-cdf6-4cf7-adb6-7f6b0788afe9",
                  "name": "GiftCard Virtual CP",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fa327b11-c19c-48fb-b431-b26cdbe5f546",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif003\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"50\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                },
                {
                  "_postman_id": "fbaa6a42-7c8a-4af8-9a63-ddf79392f07f",
                  "name": "GiftCard Virtual Set",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e40fb867-1ea6-49a3-8742-cbd3f98c0247",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif002\",\n\t    \"qty\": 1,\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "55024929-8632-4169-8322-cabe7643e10b",
              "name": "Customer - Update",
              "item": [
                {
                  "_postman_id": "0a5f9d0c-91e8-4026-917e-df2f92a7c956",
                  "name": "/carts: customer",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "40900976-b01d-4cee-8f78-869771bb544b",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "36f65638-8226-4f55-817c-f5d3697feb2c",
                  "name": "Get cart contents",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                          "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                          "} else {",
                          "    tests[\"Not 200 code or no cart items returned\"] = false;",
                          "}",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                          "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "a8e33d05-8666-4c96-bca9-a41222e70c03",
                  "name": "Update simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n  \t\"cartItemId\": \"{{cart_item_id}}\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "089fc700-4312-4ca1-adbb-b021980b6e43",
                  "name": "Get cart contents",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "0530a4e0-5453-4a77-acd7-aec25155c605",
              "name": "Customer - Delete",
              "item": [
                {
                  "_postman_id": "1edc8121-2196-483e-9db5-1ed048948e4c",
                  "name": "All item removal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "dbfa78bf-9c80-48d6-a80e-2384cacd3b27",
                  "name": "Check cart for no items",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"No items in cart\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.items).to.be.empty;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "371b3a82-74f0-4c34-aca0-36b88da266c7",
              "name": "Customer - Errors",
              "item": [
                {
                  "_postman_id": "ec2f6e94-c70d-4898-95c9-e95881f09571",
                  "name": "Bad product ID",
                  "item": [
                    {
                      "_postman_id": "68fdd404-2841-4631-b53f-84b194006276",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "0341ed96-dd9b-4c7b-a55a-b15a18e73ff9",
                      "name": "Cfg + non-existing",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Product does not exist\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n       \"product_id\": \"422\",\n    \t\"qty\": 1,\n    \t\"super_attribute\": {\n           \"92\": \"17\",\n           \"180\": \"76\"\n        }\n    }\n  },\n  {\n    \"product\": {\n\t    \"product_id\": \"9999\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "cb1c5916-2724-421e-b243-4197fac690ee",
                      "name": "Cart should be empty",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No products were added\", function () {",
                              "    pm.expect(jsonData.items.length).to.eql(0);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "afe6b68d-f2fd-4548-ba9d-d3324a5329c8",
                  "name": "Out of stock",
                  "item": [
                    {
                      "_postman_id": "8d0762c1-7146-49ea-a38d-cc6b29b85de2",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.cartId) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "874a6dd0-f35e-4123-b91a-ed8e7c300df6",
                      "name": "Add simple, qty 999",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 999\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "12767eca-2efb-42c6-a05c-ebf91ea74f09",
                      "name": "Check cart errors",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is indeed 999\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(999);",
                              "});",
                              "",
                              "pm.test(\"Cart has errors\", function () {",
                              "    pm.expect(jsonData.has_error).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Item has errors & error array\", function () {",
                              "    pm.expect(jsonData.items[0].has_error).to.eql(true);",
                              "    pm.expect(jsonData.items[0].errors).to.not.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "0a9ae277-dc65-4d77-8587-cff91efb9ab0",
                  "name": "Minimum order amount",
                  "item": [
                    {
                      "_postman_id": "9843dcaf-cd31-4bba-8202-ac30c845b74c",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.cartId) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "623e8260-2605-44f2-adf2-ec2302fa021b",
                      "name": "Add simple, qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"395\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 559\nType: Downloadeable\nName: If You Were by Keshco\nSKU: hbm006\nURL: if-you-were-by-keshco\nCategory: Books & Music\nPrice: $2.00\nQty: 1"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "92220db6-2db5-4355-8b16-8d75bcaaa5a6",
                      "name": "Check cart errors",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8e283f85-23bb-447b-b1ba-904f6e460266",
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is indeed 1\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                              "});",
                              "",
                              "pm.test(\"Cart has errors\", function () {",
                              "    if (pm.variables.get(\"minimum_order_active\") === '1') {",
                              "        pm.expect(jsonData.has_error).to.eql(true);",
                              "        pm.expect(jsonData.errors).to.not.be.empty;",
                              "    } else {",
                              "        pm.expect(jsonData.has_error).to.not.exist;",
                              "        pm.expect(jsonData.errors).to.not.exist;",
                              "    }",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "86f4c538-80eb-4427-a7f8-03dd79596ed1",
              "name": "Guest - Add",
              "item": [
                {
                  "_postman_id": "bd2a952d-3bde-4ee0-92a5-c4019dc1d08d",
                  "name": "Nominal product",
                  "item": [
                    {
                      "_postman_id": "20998a33-e0b5-401e-8dc3-57f5ff9ec600",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "24883c7e-9f13-4441-a845-7648c9b5014e",
                      "name": "Nominal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"mem000\",\n\t    \"qty\": 1,\n\t    \"options\": {\n\t      \"6\": {\n\t        \"month\": \"01\",\n\t        \"day\": \"17\",\n\t        \"year\": \"2017\"\n\t      }\n\t    },\n\t    \"recurring_profile_start_datetime\":\"09/15/2017 09:49 PM\"\n\t  }\n  }\n]\n\n"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Nominal and recurring profile item"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "2b5ec48d-6003-4c86-8ffa-15665cc295e5",
                      "name": "Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Cannot add another product with nominal in cart\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "56c15acf-dc99-4a5a-838b-6b943566efb3",
                  "name": "/carts: Guest Cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                  },
                  "response": []
                },
                {
                  "_postman_id": "fa5cbf0e-3125-4798-bbb6-faa42942e728",
                  "name": "Bundle + Configurable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n      \"product_id\": \"447\",\n      \"qty\": 2,\n      \"bundle_option\": {\n        \"23\": \"88\",\n        \"24\": \"91\"\n      },\n      \"bundle_option_qty\": {\n        \"23\": \"3\",\n        \"24\": \"4\"\n      }\n    }\n  },\n  {\n    \"product\": {\n       \"product_id\": \"422\",\n    \t\"qty\": 1,\n    \t\"super_attribute\": {\n           \"92\": \"17\",\n           \"180\": \"76\"\n        }\n    }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "a87e3ede-82f5-4e7e-9c1a-18e5f7d2e87d",
                  "name": "Add Configurable: Skirt",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "4a67586f-2e1a-4ab6-8cdc-98ca9995ac6f",
                  "name": "Bundled",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"447\",\n\t    \"qty\": 2,\n\t    \"bundle_option\": {\n\t      \"23\": \"88\",\n\t      \"24\": \"91\"\n\t    },\n\t    \"bundle_option_qty\": {\n\t      \"23\": \"3\",\n\t      \"24\": \"4\"\n\t    }\n\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
                  },
                  "response": []
                },
                {
                  "_postman_id": "d97592fe-2eff-49ed-b23f-50f6a93b936f",
                  "name": "Downloadable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"563\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
                  },
                  "response": []
                },
                {
                  "_postman_id": "eb2f8ae7-58c5-417b-9afb-0ae603c2db8e",
                  "name": "Grouped",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"439\",\n\t    \"qty\": 1,\n\t    \"super_group\": {\n\t      \"541\" : 2\n\t    }\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
                  },
                  "response": []
                },
                {
                  "_postman_id": "188ff8c5-1d80-4a31-928c-95ef3103b52a",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "39c1a815-c95a-4855-acc0-1d8d714a394e",
                  "name": "GiftCard Combined",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2721dfff-e833-4863-b072-cf5ddd78ce2d",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif001\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"75\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Combined type Gift card with custom price"
                  },
                  "response": []
                },
                {
                  "_postman_id": "d076706c-1922-4059-99a6-b908c654c318",
                  "name": "GiftCard Virtual CP",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6949ae5b-fa51-4534-a9f1-9cddb7881023",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif003\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"50\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                },
                {
                  "_postman_id": "212f2e3d-4937-41de-b458-53eebae6fd62",
                  "name": "GiftCard Virtual Set",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0edd61ba-1533-4c9e-8bf7-a0ca2691d49a",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif002\",\n\t    \"qty\": 1,\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "3713498e-767e-4cc7-970f-ff69759d6761",
              "name": "Guest - Update",
              "item": [
                {
                  "_postman_id": "b35af9ef-c782-464b-8b99-470b3aba3f34",
                  "name": "Advanced",
                  "item": [
                    {
                      "_postman_id": "f63b7400-9c16-4fc7-ab66-5219a1c27772",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8ee0f8ca-4bb4-4dac-b926-7c39c4379e3a",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "4117dcd4-db2c-43dc-8e87-3a27700e315a",
                      "name": "Cart: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "calls a customer cart as guest"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e16b92c6-ba45-42ab-aa35-18a27922f3b7",
                      "name": "Update simple & add confg",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n  \t\"cartItemId\": \"{{cart_item_id}}\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n  },\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "24c7f7b7-69db-4898-8762-ed9d0d779eea",
                      "name": "Cart: qty updated",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is now updated to 3 for the previously inserted simple product & qty 1 for the configurable\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                              "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "df2c56e3-50ad-42d6-bc72-6a548718ea69",
                  "name": "/carts: Guest Cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                  },
                  "response": []
                },
                {
                  "_postman_id": "4b63302e-3bc2-4db9-acd0-c0d81a20faa6",
                  "name": "Add Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "20809503-e3dd-4d6c-816a-c497de14edaa",
                  "name": "Cart: qty 1",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                          "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                          "} else {",
                          "    tests[\"Not 200 code or no cart items returned\"] = false;",
                          "}",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                          "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "calls a customer cart as guest"
                  },
                  "response": []
                },
                {
                  "_postman_id": "64640bda-1e62-4566-995a-ac57d33028e4",
                  "name": "Update simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n  \t\"cartItemId\": \"{{cart_item_id}}\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "c186e987-f127-4fff-b772-278351915d8e",
                  "name": "Cart: qty updated",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "7d6e7c9d-40e5-4f48-83f8-e69c3f3e7e0e",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "218e6837-421a-41cb-a0d0-c5e632670d22",
              "name": "Guest - Delete all",
              "item": [
                {
                  "_postman_id": "ecbbc4af-2eb0-4430-ad99-784580a46134",
                  "name": "Delete All",
                  "item": [
                    {
                      "_postman_id": "967bfb5f-693c-4e81-81f6-a21702eb4788",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "33c78597-4b5f-4576-9de1-be60d716b4c2",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "4edf4c67-eb62-45d8-bf75-46f9296c9688",
                      "name": "All item removal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "7b786365-6026-4296-92ad-87be2d1dce3f",
                      "name": "Check cart for no items",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "22fa3dcb-72b9-4077-b83f-770ae0298749",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "8afa7669-b38b-4e4f-b20c-3ee4a2aea82d",
                  "name": "Delete by IDs",
                  "item": [
                    {
                      "_postman_id": "1f43ed17-c88d-4c98-9aa9-3de3570f28ac",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "6d136925-2a2d-4014-8374-446462803834",
                      "name": "Get all cart item ids",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    var items = '';",
                              "    jsonData.items.forEach(function(item) {",
                              "        items += item.item_id + ',';",
                              "    });",
                              "    pm.environment.set(\"cart_items_to_remove\", items);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "2ffc490c-7ee0-45f0-a516-9768f985034e",
                      "name": "{cartId}/items?cartItemIds",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds={{cart_items_to_remove}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "query": [
                            {
                              "key": "cartItemIds",
                              "value": "{{cart_items_to_remove}}"
                            }
                          ]
                        },
                        "description": "Delete cart items by ids provided"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "020b4889-d48c-4b78-be42-80e481623621",
                      "name": "Check all items are deleted",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "description": "Retrieves the items in the cart and deletes them using their id's",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "2014f5e0-2f95-4306-ab9a-1588396df391",
          "name": "Coupon",
          "item": [
            {
              "_postman_id": "d94682ad-60a6-48a2-8e3d-6759c4172f8d",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "5da15ed3-2efa-48a4-8883-fe9d821cf912",
                  "name": "Add",
                  "item": [
                    {
                      "_postman_id": "325e9a76-6712-45c8-9bef-dce61442337a",
                      "name": "Auto-Gen",
                      "item": [
                        {
                          "_postman_id": "c12bb0ee-3634-40d9-9715-cdc6d036f7dc",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "13e943eb-5939-44db-b54e-f5cf70b3a2a5",
                          "name": "Add Simple: 500",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "6c6685ee-0e1d-40de-8932-684733a7192a",
                          "name": "Add 10% off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"3I5REXK80NUN\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Autogenerated coupon code.\nCondition for coupon is:\nGroup: Not-Logged-In, General, VIP, Wholesale; \nIf item in cart has \"Price in cart\" = 500"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1e429d99-649a-45b2-a9ed-fe5315415e1d",
                          "name": "Check coupon exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"3I5REXK80NUN code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"3I5REXK80NUN\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "b0ec9b39-f8b3-4bc4-b5c7-309418dd1a71",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "413dd7df-d7b9-4906-ae53-0866d47a7ae4",
                      "name": "Add Configurable: Boots",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e25c7932-2a94-4193-9b43-72eb29a20e1a",
                      "name": "Check no discount",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "731cf66f-8d23-4d42-a232-1af17e3279af",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "80109710-33fd-4c9c-8b06-c09f019ca232",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "b9d8155a-6e42-407a-b362-8ea2defcb32b",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "ee32191c-d7e1-46c1-ba82-f06477582cc2",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "37a5ed14-99b2-48af-a4ed-bac9b333d82f",
                      "name": "Add Configurable: Boots",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "db332a2f-abc0-436d-b256-cb79ef60fc5a",
                      "name": "Check no discount",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "7dcf8af2-9b5c-4b3a-9a0c-02a3b7d5cc95",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "4adf5acf-3328-43e4-8e49-afcdeed69062",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "a1d40099-04b9-424d-92ce-1b5f95d5745e",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "d0f82ac0-1749-4765-bb9e-a063740ece64",
                      "name": "Add 25% off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"25OFF\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Conditions: for customer group General and Category: Apparel"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "942b2a5a-09fb-4f56-8f97-59e81474ee02",
                      "name": "Check 25OFF exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"25 off code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"25OFF\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8b5d6985-829d-44fa-ae25-67d12f7bf83f",
                      "name": "Add 10 flat via Update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\t\t\n  \t\t\"cartItemId\": \"1234\",\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "1b96e5f1-91a8-4c19-ad46-a4d1c49eb543",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "185043ff-e312-4eda-ae72-a21b3c9461c9",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "22cb32aa-4cca-42a7-a9a2-9b03f5847441",
                      "name": "Add empty coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    }
                  ],
                  "description": "Run after the add tests",
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "2d349431-c473-4fc2-ab7f-15fbfdb21c22",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "c386d6df-1e80-4ddf-872b-53c1fa113223",
                      "name": "Via Empty Add",
                      "item": [
                        {
                          "_postman_id": "75b6373d-08ec-41c5-8beb-77a886d3657e",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "dbb317b3-81cc-4d47-bc38-81bde15c198c",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "d59c8ae5-0d30-4916-a4d9-ebd66f6e5ac1",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f32de409-d4d2-4ec4-9a75-7afbe0581087",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "16735c69-97e9-4c06-9730-2ce311cf8ae2",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1b1a09af-14f2-4908-8892-57e2d0d22d04",
                          "name": "Add empty coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "899b1194-016f-43f4-91d7-bb544340eb7d",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "ff8b3df1-d5bf-46ea-a0c3-654ca3292d01",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "00715ff2-3c92-4b29-aa9c-f9d164715d08",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "50301742-066e-46e0-b093-39c552b0289d",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f5e068ab-a37d-4d62-9f44-4f6814bcb42d",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "c3549a2d-99b3-40a0-9932-19e045d94b24",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "0f7f707b-a4f0-4ee3-8e2a-2172947c61a6",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "c9e6155c-1e1c-4c90-9520-3699984de622",
                          "name": "Use ?cartItemIds=",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds=COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "COUPON_XXX"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "c7a63a1a-0786-464c-94ae-2116af352267",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.not.empty;",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "51da693d-5dc0-473c-8c6c-0cdf7a8e8631",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "d5bb10f8-bc34-44b7-9445-1b47335ed0f2",
                  "name": "Add",
                  "item": [
                    {
                      "_postman_id": "23a177fc-eecf-4077-a727-f788c506fe28",
                      "name": "Auto-Gen",
                      "item": [
                        {
                          "_postman_id": "a361fc7f-969b-4d76-b5ec-1d99d1643255",
                          "name": "/carts: Guest Cart",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "b940501b-87c8-45cb-9b10-c5def2dd5018",
                          "name": "Add Simple: $500",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "5d7f18da-44c2-4ca4-a345-486e9b308c27",
                          "name": "Add 10% off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"3I5REXK80NUN\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Autogenerated coupon code.\nCondition for coupon is:\nGroup: Not-Logged-In, General, VIP, Wholesale; \nIf item in cart has \"Price in cart\" = 500"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "07ae83c0-e2c5-4f33-bb09-2630cb2b43ca",
                          "name": "Coupon is in cart",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"3I5REXK80NUN code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"3I5REXK80NUN\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "b894dfc4-7975-4a08-83a2-e52ad380e8ed",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "65f489ac-e3a4-4f8f-853e-2ed7708322e4",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "f8fd8574-c602-4490-b546-f31b7868d57a",
                      "name": "Add 15 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "f2166339-d1b6-4dae-a18b-d8ada4b64e3a",
                      "name": "Check evening15 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"evening15 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "ed02b654-6806-4c9c-8d91-50000967c6a0",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "2dd070d3-1cd6-4cec-ae28-32d6a849666f",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "04304951-c2f9-4a78-825b-244bb5b5cae3",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "00339ff4-2e5f-4990-a56b-ca40e1dceca2",
                      "name": "Add 15 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "842c1de5-b3e3-4f11-92bb-010fd8b44033",
                      "name": "Check evening15 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"evening15 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "47aff619-e636-4217-80bf-64e2f7a4f880",
                      "name": "Update with empty",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n  \t\t\"cartItemId\": \"1234\",\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "193c3f78-4aee-4ae1-ba23-4ea0cfbd5bae",
                      "name": "Check no discount",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "da085028-ce46-4008-b963-17c2906404d2",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "6e1c2ba9-4c29-4ff9-b944-bf3a4bb53110",
                      "name": "Via Empty All",
                      "item": [
                        {
                          "_postman_id": "db8eb5bb-d896-4795-8907-cf20e58272fd",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "d2ef3870-85c1-4cd8-b12b-fb2afc829c64",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "d143b407-8b6b-4067-ad79-189f73ca55aa",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "be733c0a-2fbe-4b3e-9b6e-020a3b26c8d3",
                          "name": "Check evening15 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "6b03f255-b518-41ba-81dd-e0caf5032e55",
                          "name": "Add empty coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "05909f8e-0f1b-4577-bf59-acf136ea3752",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "6fe62a39-4371-4c2b-87e2-67b62cd74815",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "e736bcf2-aa89-476c-a4fa-4c65c03b1056",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "7d14c5ab-8ee6-41f6-ab66-2a37c85004f1",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "cc1e48c7-84c7-470d-9bc9-590d0b1bf362",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "ac50de15-1d35-4839-8f68-e87c4cecffa5",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "571e98ab-29b0-4777-98d4-bfd00795bede",
                          "name": "Check evening15 exists copy",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "e699d80d-de06-4266-af7c-3fe6497852f5",
                          "name": "Use ?cartItemIds=",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds=COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "COUPON_XXX"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "dabe34d5-efb7-41dd-9e1d-559831c76e8b",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.not.empty;",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "83f12f95-6843-4132-9d99-00a7046fe5eb",
          "name": "Mixed",
          "item": [
            {
              "_postman_id": "9eb7bee8-565d-4f49-8de0-2d930e4e11a4",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "0faea518-b688-484c-9d4a-7514f7bc4f97",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "97fc1eaf-0265-4aad-a5df-ce674b4c313f",
                      "name": "Product first",
                      "item": [
                        {
                          "_postman_id": "d5017528-0164-4973-8a7e-8dcdf8b0eae7",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "81c2bf10-993a-463a-9fc7-f39e5c3df1d7",
                          "name": "Add Configurable + Coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  },\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "0eac24fb-8a85-4049-a0d7-cc02d4a63fe2",
                          "name": "Check code + product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});",
                                  "",
                                  "pm.test(\"Configurable product is in cart\", function () {",
                                  "    pm.expect(jsonData.items.length).to.be.eql(2);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "740ed0c7-fcf0-4a9d-8b83-aa893b09e008",
                      "name": "Product last",
                      "item": [
                        {
                          "_postman_id": "69a1a3c4-1b04-4219-93ec-bcf67cbed566",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "89d14521-19de-46b2-8cfc-b75ce836d135",
                          "name": "Add Coupon + Configurable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Cannot add coupon before items are in cart', function(){",
                                  "    pm.response.to.have.status(400);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  },\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "description": "Run after the add tests",
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "dd1f1020-3224-4c9b-8dc3-c0ac33a6455e",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "56aedc67-fc30-40db-9063-d6c36b586e9e",
                      "name": "Via remove all",
                      "item": [
                        {
                          "_postman_id": "1bc31e4f-be49-4865-9ad0-cab255b57512",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "04085be3-d319-4c1f-b42e-9116fc768b22",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "4cfe9c9b-f762-45f5-a663-d5fbaaaeb5bc",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1266d64c-49eb-4bcb-b316-8fca0abc868a",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "33f58abe-4d32-4e48-886e-9029fd21526a",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "8d912fd8-40c1-4d61-b26d-ee0008548491",
                          "name": "Remove all items",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "12b46e30-7fd2-4bd4-8b40-dfbc703c1d40",
                          "name": "Check no coupon/prods",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"No items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.empty;",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "fb25f047-5697-47d7-bccc-e8c774868aed",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "9115715f-f03b-4060-9cc5-d760b254bd87",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "714cdae6-c783-4f8d-9a54-410bcf011201",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f5d7ebbc-1d5d-4421-b139-6067d2eed40c",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f101bec8-068b-486a-bfb4-b6c83b0ed53a",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1d77f4a5-b61a-4083-b8c3-58a82e4b0c98",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "545b6e11-46cf-43a7-baf3-e4e902627134",
                          "name": "CartItemIds > variable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});",
                                  "",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    var items = '';",
                                  "    jsonData.items.forEach(function(item) {",
                                  "        items += item.item_id + ',';",
                                  "    });",
                                  "    pm.environment.set(\"cart_items_to_remove\", items);",
                                  "} else {",
                                  "    tests[\"No cart items returned\"] = false;",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1a9131ec-e25f-4649-939e-3c14a939b002",
                          "name": "Add simple product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Swiss Movement Sports Watch, Category: Jewelry, Price: $500.00"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f23a3af5-7247-4b2a-abe6-23b33daf6e78",
                          "name": "Remove config + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds={{cart_items_to_remove}}COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "{{cart_items_to_remove}}COUPON_XXX"
                                }
                              ]
                            },
                            "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "57f4456f-6553-483b-a814-e1ff45a37409",
                          "name": "Check discount/products",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have the 544:Watch product in cart\", function () {",
                                  "    pm.expect(jsonData.items[0].product_id).to.be.eql(\"554\");",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            },
                            "description": "Checks that there is no coupon applied and still have items in cart"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "956e7938-8f34-42ad-940e-6852c214cc70",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "748de613-ea8d-4e77-817e-bb072c932833",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "ea442cce-2dfb-4ea3-a02d-7c5118409ffa",
                      "name": "Product first",
                      "item": [
                        {
                          "_postman_id": "ef591cec-9f61-4478-8edd-b325fa69df03",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "90b069d8-090c-464e-988f-9b93953b89a2",
                          "name": "Add config + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  },\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Essex Pencil Skirt; SKU: wsd000c; Category: Dresses & Skirts; Price: $185.00\nSub-Product:"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "058abbe9-b68b-4553-be97-3187be72c263",
                          "name": "Check code + product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});",
                                  "",
                                  "pm.test(\"Configurable product is in cart\", function () {",
                                  "    pm.expect(jsonData.items.length).to.be.eql(2);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "fd69b679-b770-4e91-b564-a1549950f170",
                      "name": "Product last",
                      "item": [
                        {
                          "_postman_id": "264d1f00-6a76-415c-9674-2f9c04e7cee9",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "dea4a740-dfc4-4209-b284-0c9243f5827c",
                          "name": "Add coupon + config",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Cannot add coupon before items are in cart', function(){",
                                  "    pm.response.to.have.status(400);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  },\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Essex Pencil Skirt; SKU: wsd000c; Category: Dresses & Skirts; Price: $185.00\nSub-Product:"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "cb8b4c2f-799b-450b-b21b-34d4ddb9220d",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "6335e66c-78ce-4242-866c-147be64aa22f",
                      "name": "Via Empty All",
                      "item": [
                        {
                          "_postman_id": "42ea3c17-ed37-4f9c-8600-3f2dc4da0e0a",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "ed517d75-182a-480a-8fdf-26bd184d230b",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "5f17b5cc-4007-4ed4-a470-1159f4b70a89",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "5c032e0e-e08d-48a8-8ec9-2e3cc2a63b91",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "9ba29901-8750-417b-87bd-ab926626a0e3",
                          "name": "Check evening15 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1ba029d5-92f3-4f6b-93cd-628c96fe5918",
                          "name": "Remove all items",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "c0b64434-7f99-41fc-86b4-f2a9c4dfb580",
                          "name": "Check no prod + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"No items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.empty;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "e8245dce-c0e8-41cd-9282-e0bf43674e99",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "2049835d-f4ef-4fe0-9bb7-e703b992e9b8",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f7120e60-3662-4ddd-8c5e-971a6eff91dd",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "3e007435-880c-40a1-b260-b66d2d6b590e",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "019e0052-d739-4c34-afdd-20e203d94bf3",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "380a3f07-84f5-4c9d-bf48-c7df6e6255a0",
                          "name": "CartItemIds > variable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});",
                                  "",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    var items = '';",
                                  "    jsonData.items.forEach(function(item) {",
                                  "        items += item.item_id + ',';",
                                  "    });",
                                  "    pm.environment.set(\"cart_items_to_remove\", items);",
                                  "} else {",
                                  "    tests[\"No cart items returned\"] = false;",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1cee41cf-b420-45d2-937b-afe4612e9384",
                          "name": "Add simple product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Swiss Movement Sports Watch, Category: Jewelry, Price: $500.00"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "0aa4616e-28c1-4639-ba14-30005b6dec8c",
                          "name": "Remove config + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds={{cart_items_to_remove}}COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "{{cart_items_to_remove}}COUPON_XXX"
                                }
                              ]
                            },
                            "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "c89a95ea-ea59-439f-ad16-01aeb64f1664",
                          "name": "Check discount/products",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have the 544:Watch product in cart\", function () {",
                                  "    pm.expect(jsonData.items[0].product_id).to.be.eql(\"554\");",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            },
                            "description": "Checks that there is no coupon applied and still have items in cart"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "description": "Adds/Removes items & coupons in one call",
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "c229d06f-1261-4c21-ab20-07b47f3c2713",
      "name": "/v2/carts/:id/items/:itemId",
      "item": [
        {
          "_postman_id": "673f69ca-ed77-4254-b77f-e5a15922c5b5",
          "name": "Product",
          "item": [
            {
              "_postman_id": "86d224e0-65fc-4db2-a253-e737ca6cb901",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "7cb8702f-af0a-4207-a9fb-7ba8cd63a6c1",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "f35b8fd5-7568-485a-b21c-8217bc3eab43",
                      "name": "Simple",
                      "item": [
                        {
                          "_postman_id": "52eb7220-6a0e-4d82-afb5-b4156f4bf5b8",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "71d7b106-7fcf-4c32-897a-76b0f1c5f096",
                          "name": "Add Simple",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "2a769c23-5041-4dcb-a7cf-8a59bdcb1dea",
                          "name": "Carts: qty 1",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                                  "} else {",
                                  "    tests[\"Not 200 code or no cart items returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "758e7ca5-a0e8-4f32-b90d-21aa7ca21e3d",
                          "name": "Update simple",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "9a40404e-a5ee-4bf6-aa19-0849c164b940",
                          "name": "Carts: qty 3",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1bf2457f-ed0f-4f86-9c47-c3eaf0ed0f98",
                          "name": "Alt update",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"cartItemId\": \"1111\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 4\n\t  }\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "Alternative way to updae the cart. This is the case where it is possible that the item id is in the body, even though it's not supposed to. The test makes sure the cartItemId in the body is replaced by the URI one"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "9a85d7cb-ae1f-4d2a-9ee8-21e66bccd2a5",
                          "name": "Carts: qty 4",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 4 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(4);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "46891eda-5512-4dc1-934f-3b44d987c369",
                      "name": "Configurable",
                      "item": [
                        {
                          "_postman_id": "c672c898-9756-498f-b6c2-68812ecd82b2",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "5a090994-2ea7-4984-87db-064a35e285e0",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "03ceabb9-306a-449c-ad46-5ca1b1749282",
                          "name": "Carts: qty 1",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                                  "} else {",
                                  "    tests[\"Not 200 code or no cart items returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                                  "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "34ff31e3-6fc3-48c8-8829-ecf63488c508",
                          "name": "Update configurable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"product\": {\n\t    \"product_id\": \"422\",\n\t    \"qty\": 3\n\t}\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "cc089fdf-51b7-4342-b804-53783fdcee53",
                          "name": "Carts: qty 3",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                                  "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "e95ceda9-8d4e-4488-bd86-fc5b3f435a64",
                          "name": "Alt update",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"cartItemId\": \"1111\",\n    \"product\": {\n\t    \"qty\": 4\n\t}\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "Alternative way to updae the cart. This is the case where it is possible that the item id is in the body, even though it's not supposed to. The test makes sure the cartItemId in the body is replaced by the URI one"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "18e467b0-51c6-49de-b66a-260b73b5d0ed",
                          "name": "Carts: qty 4",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 4 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(4);",
                                  "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "e4ae1aa7-8112-4d42-9ef6-a15c6c717cda",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "5205a4d2-e6e3-488d-9554-77106b11ef3d",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "c9d3ef99-d80f-423b-b8f6-4fdb52f385f3",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "542c4d9a-3536-49ec-9206-bfd5f45513e0",
                      "name": "Carts: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items.length).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "42e14bac-b881-4ee6-8f8b-9ee83f827061",
                      "name": "Delete by ID",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "50a3b432-d374-4ada-87ae-8ad06942ed63",
                      "name": "Check cart for no items",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "60c53af8-7e89-4062-b493-f62095cb12a8",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "76b8865d-1932-4949-9eaf-a4f402941a84",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "86823afa-5f90-4c4e-bbf6-7428d0185698",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "28fc40a3-2e17-496f-8de8-debda0793183",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "9d3fc75c-755e-4b07-9c7a-675af5d7e9c8",
                      "name": "Carts: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "ef2b6a40-5bfe-4c11-b77b-2fc19a610854",
                      "name": "Update (no cartItem)",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        },
                        "description": "Physical Gift Card"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "25fd7a53-3d48-4a16-bff2-2bdbfde7f31a",
                      "name": "Carts: qty 3",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "46589ab2-1039-4925-8204-3958a019074d",
                      "name": "Alt update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"cartItemId\": \"1111\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 4\n\t  }\n}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        },
                        "description": "Alternative way to updae the cart. This is the case where it is possible that the item id is in the body, even though it's not supposed to. The test makes sure the cartItemId in the body is replaced by the URI one"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "f23914cd-d81b-4e91-a480-5b789efe4a2a",
                      "name": "Carts: qty 4",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is now updated to 4 for the previously inserted simple product\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items[0].qty).to.eql(4);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "23e8dfe5-6f6d-40a8-804b-3bc37331146b",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "23b62402-4712-4e9d-9122-d5f58edf56f6",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "f64c9178-3304-4769-b9c4-044a939cdd41",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "bbf7dd68-0425-4655-a411-136aa38ee3e9",
                      "name": "Carts: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items.length).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "735987ee-4322-4a1e-8e19-85b8ad4ef01f",
                      "name": "Delete by ID",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "37b198a7-097b-4ad1-8a55-b00f666c1686",
                      "name": "Check cart for no items",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "7549c102-bfc0-43ee-8686-847faa9e6edb",
          "name": "Coupon",
          "item": [
            {
              "_postman_id": "65969e9a-27f3-48ed-9247-c6e9fafb60eb",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "3e0d24b2-2067-4d24-abd1-fa44208710da",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "2ccf2dd9-b110-4583-bcfb-bbe7d083a75e",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e2f4d102-f2d1-463e-9fd1-8db5719f3b28",
                      "name": "Add Configurable: Boots",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "c77e9c3e-b5ea-4c73-a825-cf0f74f83fa3",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "496eeaef-eb97-455d-b63a-6b10e9679105",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8ad204eb-3702-4d9d-a74f-4216d7dd79b1",
                      "name": "items/COUPON_X",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/COUPON_XXX",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "COUPON_XXX"
                          ]
                        },
                        "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "d24e4c5f-1c9a-40a5-8731-3173c0688639",
                      "name": "Check discount/products",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});",
                              "",
                              "pm.test(\"Still have configurable products in cart\", function () {",
                              "    pm.expect(jsonData.items.length).to.be.eql(2);",
                              "});",
                              "",
                              ""
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Checks that there is no coupon applied and still have items in cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "83ebe7cf-92ff-4dbe-8438-2d184a40baf8",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "bfdfb8f2-4148-41e6-8b3a-f2aaaf606556",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "7875a734-5064-4516-b1bf-2ff0ac67e3f9",
                      "name": "/carts: guest",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "3c8be01d-f240-4e66-a9ef-be8b0949191b",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "4c49218e-4e2e-41fd-9c5a-37f9b74baba2",
                      "name": "Add 15 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "80ec7556-33fd-4302-964c-c5e6ef6894ce",
                      "name": "Code evening15 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"evening15 code exists\", function () {",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "2a78da01-0d77-4585-a76b-899b334d12ea",
                      "name": "items/COUPON_X",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/COUPON_XXX",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "COUPON_XXX"
                          ]
                        },
                        "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "02a1b230-f3db-4b44-9ab6-d1a72be08e70",
                      "name": "Check discount/products",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});",
                              "",
                              "pm.test(\"Still have configurable item in cart\", function () {",
                              "    pm.expect(jsonData.items.length).to.be.eql(2);",
                              "});",
                              "",
                              ""
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Checks that there is no coupon applied and still have items in cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "50caf846-c08e-4daa-8588-cca182bb38a8",
      "name": "/v2/carts/:id/checkoutUrl",
      "item": [
        {
          "_postman_id": "ed50616c-1a0d-46ae-aef2-582d3713d9da",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "14dfee4f-787b-4744-9507-eb8db0e523f2",
              "name": "Create customer cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a customer cart"
              },
              "response": []
            },
            {
              "_postman_id": "2bc03058-38b9-4a63-8ed2-207adcba035a",
              "name": "Add simple product to cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_items}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_items}}"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "b9823d4e-14c8-45e2-8275-70d1d8d3f92a",
              "name": "checkoutURL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Checkout URL is returned\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.jsonBody('url');",
                      "    pm.response.to.have.jsonBody('expires_in', 30);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_checkoutUrl}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_checkoutUrl}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "e3ef35b0-8d6c-4080-be84-33893758250a",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "cfcfc030-cc3f-4bb0-97e7-561aa1c18d9e",
              "name": "Create guest cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
              },
              "response": []
            },
            {
              "_postman_id": "2b901b95-db19-491b-8682-19c7025ee4b7",
              "name": "Add simple item to cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_items}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_items}}"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "915daacd-3119-454c-adc9-4b0be7cc46f7",
              "name": "checkoutURL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Checkout URL is returned\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.jsonBody('url');",
                      "    pm.response.to.have.jsonBody('expires_in', 30);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_checkoutUrl}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_checkoutUrl}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "4bf3ec01-8e04-46a9-9a95-e2b7b0a30bc0",
      "name": "/v2/carts/:id/customer",
      "item": [
        {
          "_postman_id": "dfc8cffa-64c6-4478-a5e1-09fd501ec15d",
          "name": "Create customer cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                  "} else {",
                  "    tests[\"Cart ID is not returned\"] = false;",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "function isNumeric(n) {",
                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ]
            },
            "description": "Creates a customer cart"
          },
          "response": []
        },
        {
          "_postman_id": "5234d353-5c77-4bab-bdfe-df25a3f3db00",
          "name": "Customer: add simple",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts_id_items}}",
              "host": [
                "{{domain}}{{endpoint_carts_id_items}}"
              ]
            },
            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
          },
          "response": []
        },
        {
          "_postman_id": "7453dfa9-a25f-4b96-9b9d-8dabd97868bc",
          "name": "Customer: cart qty 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Initial quantity is 1 after adding a simple product\", function () {",
                  "    pm.expect(jsonData.items.length).to.eql(1);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "{{cartId}}"
              ]
            },
            "description": "Creates a customer cart"
          },
          "response": []
        },
        {
          "_postman_id": "bdeb6beb-21e1-4282-9f56-5dfa95880234",
          "name": "/carts: Guest Cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                  "} else {",
                  "    tests[\"Cart ID is not returned\"] = false;",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "function isNumeric(n) {",
                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ]
            },
            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
          },
          "response": []
        },
        {
          "_postman_id": "1ca6ca34-1ca9-4079-922e-797ea4fb3c34",
          "name": "Guest: add downloadable",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"563\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts_id_items}}",
              "host": [
                "{{domain}}{{endpoint_carts_id_items}}"
              ]
            },
            "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
          },
          "response": []
        },
        {
          "_postman_id": "d4f283f4-31dc-4997-bceb-5f766fe21641",
          "name": "Guest: cart qty 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Initial quantity is 1 after adding a downlodable product\", function () {",
                  "    pm.expect(jsonData.items.length).to.eql(1);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "{{cartId}}"
              ]
            },
            "description": "calls a customer cart as guest"
          },
          "response": []
        },
        {
          "_postman_id": "6c7db066-1824-4388-96cc-f4e662051737",
          "name": "Merge carts",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (responseCode.code === 200 && jsonData.cartId) {",
                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                  "}",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Cart ID is returned\", function () {",
                  "    pm.expect(jsonData.cartId).to.not.be.empty;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts_id_customer}}",
              "host": [
                "{{domain}}{{endpoint_carts_id_customer}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "54c3ca47-1fff-4412-8336-bc0969733f76",
          "name": "Customer: cart qty 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Carts merged, 2 items in cart\", function () {",
                  "    pm.expect(jsonData.items.length).to.eql(2);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "{{cartId}}"
              ]
            },
            "description": "Creates a customer cart"
          },
          "response": []
        },
        {
          "_postman_id": "2332426f-6503-4575-9c9a-b504cc3f026c",
          "name": "Merge: call ME endpoint",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Cannot use ME endpoint here\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/me/customer",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "me",
                "customer"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "2c8d5424-68df-4075-97a3-f310ba85aedd",
      "name": "/v2/customers/me",
      "item": [
        {
          "_postman_id": "b0cd85f4-d6a4-4573-bcdc-5a619b31a8ad",
          "name": "Customer: me",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eda8e7c9-de5e-4f59-8e45-4c7798df6698",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Customer ID is returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.customer_id).to.not.be.empty;",
                  "});",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.unset(\"customer_id\");"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{domain}}{{endpoint_customers_me}}",
              "host": [
                "{{domain}}{{endpoint_customers_me}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "cfeb8d1a-242b-42c6-867a-c69f0c8a7635",
          "name": "Guest cannot call this endpoint",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d71bccf3-b3d3-480f-9000-d0d6294ea575",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Guest cannot access, unauthorized\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{domain}}{{endpoint_customers_me}}",
              "host": [
                "{{domain}}{{endpoint_customers_me}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "39c97479-def8-42b1-8f9d-172e3f92cfbd",
      "name": "/v2/customers/:id/addresses",
      "item": [
        {
          "_postman_id": "22735db4-3cb4-4d20-9b60-6ef5dbd8266e",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "dd47e454-6020-4385-a439-3dea63624973",
              "name": "Get address",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "575714b8-e63a-402c-92c0-c45fe722225c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.variables.set(\"customer-id\", \"1\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "fe5dc968-baee-4c87-8863-3384aa68dd7e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Guest cannot access customer endpoint by an existing ID of 1\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});",
                      "pm.variables.unset(\"customer-id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {},
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "3f7a3eab-0607-4e9c-8b0d-67730ff561e1",
              "name": "Create address",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "575714b8-e63a-402c-92c0-c45fe722225c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.variables.set(\"customer-id\", \"1\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "fe5dc968-baee-4c87-8863-3384aa68dd7e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Guest cannot access customer endpoint by an existing ID of 1\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});",
                      "pm.variables.unset(\"customer-id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "07d414f4-6bac-4e03-99d5-6d3d4a9b9f8b",
              "name": "Delete address",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "21e83ae0-714e-47ef-aea7-805fe1801de4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Guest cannot access customer endpoint by an existing ID of 1\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});",
                      "pm.variables.unset(\"customer-id\");",
                      "pm.variables.unset(\"address-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "bb50f680-c6e9-49d0-b73c-19dd063ea186",
                    "type": "text/javascript",
                    "exec": [
                      "pm.variables.set(\"customer-id\", \"1\");",
                      "pm.variables.set(\"address-id\", \"1\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Making sure the guest cannot access this endpoint",
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "1df97727-7737-4990-af8a-47d0ba7fc8c8",
          "name": "Customer 2 (C2)",
          "item": [
            {
              "_postman_id": "2dc8e529-1cc9-4eb6-a917-121dff94d4cf",
              "name": "Get C1 ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "074af910-0c51-4e25-8f5f-8aa19bec0921",
              "name": "Create address via C1",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                    "type": "text/javascript",
                    "exec": [
                      "// preparation for delete / update address endpoint",
                      "var jsonData = pm.response.json();",
                      "if (jsonData.addressId) {",
                      "    pm.environment.set(\"address-id\", jsonData.addressId);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "dd765726-13ca-42ae-ba5d-efdb6dbe160f",
              "name": "Create address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2d0771bb-36f1-4096-a9d8-0f213a404ad3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "05123a63-c772-46c8-8356-e5dc537c66f1",
              "name": "Get address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e8c83952-bfd1-4c86-9518-1fb825553b39",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "fea2f1de-e679-4198-abee-c58d56f37333",
              "name": "Update address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d5fe4a9-8d64-4c86-abb5-d70556361c07",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "034019cd-7070-499f-b523-c16e67b7bf67",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));",
                      "setTimeout(function(){}, 2000); //delay 2 seconds so that created_at and updated_at are different"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"EE\",\n    \"region\": \"Harjumaa\",\n    \"postcode\": \"13916\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "9373b3a6-3e99-49af-8c62-051f9cf059a7",
              "name": "Delete address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e95581e-0177-4dbd-b8f6-a28e4e6d88f7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "c702d2ab-387a-46fc-a83c-25f172719e4f",
              "name": "cleanup",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "146b2f14-10e9-43a5-972e-02e5442395e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "c62addc6-2c09-4ba4-9541-ade188cb4b78",
          "name": "Create",
          "item": [
            {
              "_postman_id": "87e0b420-fdc1-4136-9c30-fc9f7680801d",
              "name": "Errors",
              "item": [
                {
                  "_postman_id": "b16ecdf0-df86-46b5-b75e-cdb2416cb915",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e232847-89ab-4d2e-94b0-11642a2b365b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "5a073657-3263-4028-aae2-9968e3abf2ae",
                  "name": "Required errors",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "66930191-8830-4aae-9aa8-5900658a79bf",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "/**",
                          " * Traverses all default errors and checks that they exist as json objects",
                          " */",
                          "pm.test(\"All default errors appear correctly\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    const list = ['firstname', 'lastname', 'street', 'country_id', 'city', 'postcode', 'telephone']",
                          "    pm.expect(jsonData.messages.error.length).to.be.gte(7);",
                          "    list.forEach((path) => {",
                          "        let result = jsonData.messages.error.filter((item) => item.path === path);",
                          "        pm.expect(result.length).to.eq(1);",
                          "        if (result.length === 0) {",
                          "            console.log('This path is not available in this mage instance: ' + path)",
                          "        }",
                          "    })",
                          "});",
                          "",
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "312608d5-1b6e-4897-966c-01dd8aa5e06c",
                  "name": "Region doesn't exist",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0a78e10c-f4e1-4db8-9cd8-45413846399d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('State/Province does not exist.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"test1.firstname\",\n    \"lastname\": \"test1.lastname\",\n    \"city\": \"test1.city\",\n    \"country_id\": \"US\",\n    \"region\": \"bla\",\n    \"postcode\": \"test1.postcode\",\n    \"telephone\": \"test1.telephone\",\n    \"street\": [\"test1.street\"]\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "dab4a7d4-f78a-4587-af77-79098eb6eb73",
                  "name": "Region is not a string",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "71d16f78-8d2b-42b3-953a-735f1b5f1c50",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"US\",\n        \"region\": 1,\n        \"postcode\": \"test1.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "9e41bea1-d5e9-4147-b672-0b6784559480",
                  "name": "No region provided",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "86a42c19-c1c8-4d24-a87e-befae29dec4b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"State/Province error is thrown\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('\"State/Province\" is required.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"\",\n        \"postcode\": \"test1.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n  }"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "668edb76-fe0d-4f4a-a374-7d876ba14db4",
                  "name": "No region needed for Italy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "27c387ae-33eb-46d6-a04d-18252e260a26",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Only postcode error is thrown and no region error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('postcode');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"IT\",\n        \"region\": \"\",\n        \"postcode\": \"\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n  }"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "5897169a-cd3e-43a5-9d45-8019b13fcf5b",
                  "name": "Country code too long",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a0e30c-2a27-49f6-8be5-26d47dbea85d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"United States\",\n        \"region\": \"test.region\",\n        \"postcode\": \"test.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "9245f9f3-2c4f-4b12-be7a-d9cd5fefae37",
                  "name": "Country code too short",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2456a7c-69e5-438c-9873-320242742b9f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"U\",\n        \"region\": \"test.region\",\n        \"postcode\": \"test.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b570ddae-af2d-49be-8573-6490d642017f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f3b6d2d4-b0b3-4b7c-ab0c-aa16d0f7ce2f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "10cf6cbb-c3aa-4e30-bef6-a6916e0da91f",
              "name": "Defaults",
              "item": [
                {
                  "_postman_id": "5117dc8a-3968-49df-a919-0da98f728517",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "9fda48ad-3b6d-4f64-a261-d08e5fa18d9e",
                  "name": "Create address (get ID)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                        "type": "text/javascript",
                        "exec": [
                          "// preparation for delete / update address endpoint",
                          "var jsonData = pm.response.json();",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ],\n    \"is_default_billing\": 0,\n    \"is_default_shipping\": 1\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "696078e0-d75d-4310-9904-375c550ca9b5",
                  "name": "Check default status",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3e77a69a-d733-4443-93a7-c93b0108514b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct default status is returned\", function () {",
                          "    var lastAddress = pm.response.json();",
                          "    pm.expect(lastAddress.is_default_billing).to.eq(0);",
                          "    pm.expect(lastAddress.is_default_shipping).to.eq(1);",
                          "});",
                          "",
                          "pm.environment.unset(\"seed\");",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "9a95cdab-7a1d-4c8f-af5d-81627801c059",
              "name": "Get customer ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "37738eaf-17d7-4600-be11-e007c76af918",
              "name": "Create address (get ID)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                    "type": "text/javascript",
                    "exec": [
                      "// preparation for delete / update address endpoint",
                      "var jsonData = pm.response.json();",
                      "if (jsonData.addressId) {",
                      "    pm.environment.set(\"address-id\", jsonData.addressId);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "1dc79332-1bf0-4051-9089-f786076eaa6f",
              "name": "Check last address entry",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50a057c1-3a2b-4288-9af5-192ce60da704",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.customer_id).to.eq(pm.environment.get(\"customer-id\"));",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.updated_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"US\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Arizona\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"85000\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "033c5781-db84-44a2-b986-23c621b203e9",
              "name": "Check addresses by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a4db5316-86f5-4c77-ae9d-2a8f07740f5f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    var lastAddress = pm.response.json();",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.updated_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"US\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Arizona\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"85000\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "3745f80f-cb65-44e7-aae4-0d1be9f9df19",
              "name": "cleanup",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40b75786-3514-46b9-98c4-6d9774f2d4ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "id": "4b7a8d7f-9bbd-4c6f-878a-f71d38e1a982",
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "id": "cee13ced-d2e8-4416-b506-3ffd165aac32",
                "type": "text/javascript"
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "0733b7a7-af39-4a4b-93c8-f6a990d34bae",
          "name": "Update",
          "item": [
            {
              "_postman_id": "75d06e10-d4a9-444e-aee7-935055baea39",
              "name": "Errors",
              "item": [
                {
                  "_postman_id": "089c0897-b5b9-47bf-a1ab-ea79a8ab52d7",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e232847-89ab-4d2e-94b0-11642a2b365b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "754f7a0b-f1c9-47ef-8967-38da4aafe6ee",
                  "name": "Create address (get ID)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                        "type": "text/javascript",
                        "exec": [
                          "// preparation for delete / update address endpoint",
                          "var jsonData = pm.response.json();",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "5dc38776-74ae-4f0d-aa2c-e6017b1c8a46",
                  "name": "Empty body",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "244d963e-3945-44c9-9b7a-066d0d6f8c4e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Empty body, status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "68e5c064-3acb-467b-9664-168e8e51e4a9",
                  "name": "Region doesn't exist",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0a78e10c-f4e1-4db8-9cd8-45413846399d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('State/Province does not exist.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"US\",\n    \"region\": \"bla\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "6a3e8c28-948b-4630-ac2e-5c985e3c7409",
                  "name": "Region is not a string",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "71d16f78-8d2b-42b3-953a-735f1b5f1c50",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"US\",\n    \"region\": 1\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "45d63656-d45f-4695-b04d-03f417d46077",
                  "name": "No region provided",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "86a42c19-c1c8-4d24-a87e-befae29dec4b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"State/Province error is thrown\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('\"State/Province\" is required.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"US\",\n    \"region\": \"\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "3a335b03-27bc-4d3e-9f2f-033d79b583fc",
                  "name": "No region needed for Italy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "27c387ae-33eb-46d6-a04d-18252e260a26",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Only postcode error is thrown and no region error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('postcode');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"IT\",\n    \"region\": \"\",\n    \"postcode\": \"\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "63946f9b-cc67-441b-a554-13c99c4f23b3",
                  "name": "Country code too long",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a0e30c-2a27-49f6-8be5-26d47dbea85d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"United States\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "fa3a464b-eb4a-4803-93d9-f90e6d30a164",
                  "name": "Country code too short",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2456a7c-69e5-438c-9873-320242742b9f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"U\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "fe9de52e-f5f4-4555-af0a-5956816ccd46",
                  "name": "cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5be76750-28f8-414d-961c-8de6c1185296",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"seed\");",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}?ids={{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "query": [
                        {
                          "key": "ids",
                          "value": "{{address-id}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b570ddae-af2d-49be-8573-6490d642017f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f3b6d2d4-b0b3-4b7c-ab0c-aa16d0f7ce2f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "9b44398b-dbc2-4ad8-9fa3-5f590df0b2c2",
              "name": "Defaults",
              "item": [
                {
                  "_postman_id": "472f16a7-f8b0-4b02-8189-55931290275d",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "216ccba2-a938-468b-b174-ac48ee8cde9c",
                  "name": "Create address (get ID)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                        "type": "text/javascript",
                        "exec": [
                          "// preparation for delete / update address endpoint",
                          "var jsonData = pm.response.json();",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ],\n    \"is_default_billing\": 1,\n    \"is_default_shipping\": 1\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "b5484056-3391-4e50-a9d6-bcae033aa637",
                  "name": "Attempt set defaults to 0",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2102d275-5464-4b29-a4e1-fe22a1d2e578",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "7c76b266-d40a-4922-bb90-adfbc01176dd",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"country_id\": \"US\",\n\t\"region\": \"AZ\",\n    \"is_default_billing\": 0,\n    \"is_default_shipping\": 0\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "51b4cd81-22eb-4bbb-bb43-197f546c5668",
                  "name": "Check error + clean",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f690b4c0-cbf4-408e-8c30-9392cd8054f9",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Cannot delete a default address\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.environment.unset(\"seed\");",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Test to make sure that we cannot change defaults by passing 0's at the end we try to delete, a successful error on delete means that it is stil default and we were unsuccessful.",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3f0b46c5-f723-455e-b31f-5d9a2bfe26f2",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "c8a791ec-f3df-4373-927e-ff890b51d270",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "dea7aa0f-59af-4054-b32d-0bdeab6e3555",
              "name": "Get customer ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "81426051-3a99-4c6a-8750-fedcaa1899ec",
              "name": "Create address (get ID)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                    "type": "text/javascript",
                    "exec": [
                      "// preparation for delete / update address endpoint",
                      "var jsonData = pm.response.json();",
                      "if (jsonData.addressId) {",
                      "    pm.environment.set(\"address-id\", jsonData.addressId);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"fax\": \"{{seed}}.fax\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "9aeaf525-56c7-42dc-b619-87fa8a0c8a63",
              "name": "Check address data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b7a49c3a-ca8e-4bef-a3b8-69a9f109d2f0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.customer_id).to.eq(pm.environment.get(\"customer-id\"));",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.created_at).to.eq(lastAddress.updated_at);",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"US\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Arizona\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"85000\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.fax).to.eq(pm.environment.get(\"seed\") + \".fax\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "    pm.expect(lastAddress.is_default_billing).to.eq(0);",
                      "    pm.expect(lastAddress.is_default_shipping).to.eq(0);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "dc9b4423-dfd0-49c0-b6d6-954235a4fba7",
              "name": "Update address data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2102d275-5464-4b29-a4e1-fe22a1d2e578",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "034019cd-7070-499f-b523-c16e67b7bf67",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));",
                      "setTimeout(function(){}, 2000); //delay 2 seconds so that created_at and updated_at are different"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"EE\",\n    \"region\": \"Harjumaa\",\n    \"postcode\": \"13916\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"fax\": \"{{seed}}.fax\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "59970137-2a5c-43df-956e-c5300bdb8a4e",
              "name": "Check updated address",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6c29ba64-ea52-460b-8482-c640365195ec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.customer_id).to.eq(pm.environment.get(\"customer-id\"));",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.created_at).to.not.eq(lastAddress.updated_at);",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"EE\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Harjumaa\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"13916\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.fax).to.eq(pm.environment.get(\"seed\") + \".fax\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "    pm.expect(lastAddress.is_default_billing).to.eq(0);",
                      "    pm.expect(lastAddress.is_default_shipping).to.eq(0);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e0fd3a4d-b403-41a2-a325-03cc04ccffb6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "9e7c0efd-b83d-4cdb-ac97-cc9194284db9",
              "name": "Set default",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2102d275-5464-4b29-a4e1-fe22a1d2e578",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7c76b266-d40a-4922-bb90-adfbc01176dd",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"country_id\": \"US\",\n\t\"region\": \"AZ\",\n    \"is_default_billing\": 1,\n    \"is_default_shipping\": 0\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "300743af-2ef7-4589-b07c-c68e9186edd8",
              "name": "Check default + clean",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "16690fc5-fb7b-4f22-ab8f-3c6d66034ea3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.is_default_billing).to.eq(1);",
                      "    pm.expect(lastAddress.is_default_shipping).to.eq(0);",
                      "});",
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e0fd3a4d-b403-41a2-a325-03cc04ccffb6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "4b7a8d7f-9bbd-4c6f-878a-f71d38e1a982",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "cee13ced-d2e8-4416-b506-3ffd165aac32",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "a6009924-7e77-49cf-bd61-5ff7211546c1",
          "name": "Delete",
          "item": [
            {
              "_postman_id": "7e0620ce-1753-45f6-9a72-9df1db702b99",
              "name": "Single",
              "item": [
                {
                  "_postman_id": "93d3cd30-21ce-42e8-9e86-69714143233e",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "17e42647-1a30-4fbc-87db-19215e721a8c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "4e2c70cd-7764-4672-9c76-8dee0af0ce91",
                  "name": "Create address",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "49048781-04cb-44ee-8271-225312bec2a1",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully created address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "var jsonData = pm.response.json();",
                          "pm.test(\"Customer address ID is returned\", function () {",
                          "    pm.expect(jsonData.addressId).to.not.be.empty;",
                          "});",
                          "",
                          "// preparation for delete address endpoint",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\t\"prefix\": \"Test1.prefix\",\n        \"firstname\": \"Test1.first\",\n        \"middlename\": \"Test1.mid\",\n        \"lastname\": \"Test1.last\",\n        \"suffix\": \"Test1.suffix\",\n        \"company\": \"Test1.comapny\",\n        \"city\": \"Test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"Arizona\",\n        \"postcode\": \"85000\",\n        \"telephone\": \"618-322-0000\",\n        \"vat_id\": \"Test1.vat_id\",\n        \"street\": [\n            \"Test1.street1\",\n            \"Test1.street2\"\n        ]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "6faeeb7f-8d09-4343-a636-fd840844c5b5",
                  "name": "Delete address by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e2d949cc-8606-477b-98b0-422bb879951e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully deleted address\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "ddac8266-35cc-47ea-a32c-7794ef4d11e2",
                  "name": "No address exists + cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "75c2627f-a51e-40cd-b1cc-4e290ec2107f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Resource should not exist\", function () {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Address not found error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].message).to.eq('Resource not found.');",
                          "});",
                          "",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "b66e808b-f425-4d10-9bc6-484fa8628105",
              "name": "Multiple",
              "item": [
                {
                  "_postman_id": "bf12b189-012e-4a05-aac1-e895600d8e06",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "815fc4f6-d2ae-400f-8edb-e72ad3cf1e0b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "79243fc9-1aca-4839-b4d5-d349c52bc4a3",
                  "name": "Create first address",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d05474ac-0db9-4084-968e-085b65fd518b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully created address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "var jsonData = pm.response.json();",
                          "pm.test(\"Customer address ID is returned\", function () {",
                          "    pm.expect(jsonData.addressId).to.not.be.empty;",
                          "});",
                          "",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\t\"prefix\": \"Test1.prefix\",\n        \"firstname\": \"Test1.first\",\n        \"middlename\": \"Test1.mid\",\n        \"lastname\": \"Test1.last\",\n        \"suffix\": \"Test1.suffix\",\n        \"company\": \"Test1.comapny\",\n        \"city\": \"Test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"Arizona\",\n        \"postcode\": \"85000\",\n        \"telephone\": \"618-322-0000\",\n        \"vat_id\": \"Test1.vat_id\",\n        \"street\": [\n            \"Test1.street1\",\n            \"Test1.street2\"\n        ]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "93d8695f-98b0-451f-be53-83551a49ee80",
                  "name": "Create second address",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1d8f7c79-4735-4291-997a-68c6afccccc1",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully created address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "var jsonData = pm.response.json();",
                          "pm.test(\"Customer address ID is returned\", function () {",
                          "    pm.expect(jsonData.addressId).to.not.be.empty;",
                          "});",
                          "",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id-2\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\t\"prefix\": \"Test1.prefix\",\n        \"firstname\": \"Test1.first\",\n        \"middlename\": \"Test1.mid\",\n        \"lastname\": \"Test1.last\",\n        \"suffix\": \"Test1.suffix\",\n        \"company\": \"Test1.comapny\",\n        \"city\": \"Test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"Arizona\",\n        \"postcode\": \"85000\",\n        \"telephone\": \"618-322-0000\",\n        \"vat_id\": \"Test1.vat_id\",\n        \"street\": [\n            \"Test1.street1\",\n            \"Test1.street2\"\n        ]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "3ca84ad6-04a9-4f64-abbc-7beb17b930e6",
                  "name": "Delete addresses by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "54cb59ee-a543-419a-a837-c4ef22ace3f2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully deleted addresses\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}?ids={{address-id}},{{address-id-2}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "query": [
                        {
                          "key": "ids",
                          "value": "{{address-id}},{{address-id-2}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "7a5c0e16-997f-4a58-a13a-18b61be9717f",
                  "name": "No address 1 + cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6cb1e62f-0230-4278-a1fc-9f609b5fb352",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Resource should not exist\", function () {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Address not found error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].message).to.eq('Resource not found.');",
                          "});",
                          "",
                          "pm.environment.unset(\"address-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "33260292-3f4e-44e4-8fc1-be500e268531",
                  "name": "No address 2 + cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6387521e-485f-4e06-8aaa-d4d0f5fceea7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Resource should not exist\", function () {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Address not found error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].message).to.eq('Resource not found.');",
                          "});",
                          "",
                          "pm.environment.unset(\"address-id-2\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id-2}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id-2}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "035760e3-06ac-44a7-af60-5cde6a26241d",
          "name": "Cleaning routine",
          "item": [
            {
              "_postman_id": "a88618bf-766a-432d-98f8-d88e06301a05",
              "name": "Get customer ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e4e2fb85-871f-448e-bebf-ea7689ae550a",
                    "type": "text/javascript",
                    "exec": [
                      "if (responseCode.code === 200) {",
                      "    var jsonData = pm.response.json();",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "3bce0371-11bc-4974-9c81-c286a79bd996",
              "name": "Get all addresses",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11498c79-a3ac-49a0-8836-970d8cb7d003",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const list = [];",
                      "jsonData.forEach((address) => {",
                      "    list.push(address.entity_id);",
                      "})",
                      "",
                      "pm.environment.set(\"cleaning-list\", list.join(','));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "be5773e0-4f4c-4b05-be50-cad44734d950",
              "name": "Create default address",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "000987a0-8d9f-4c84-8691-9dc12832cc96",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ],\n    \"is_default_billing\": 1,\n    \"is_default_shipping\": 1\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "054aedbf-497b-446e-a56c-dc67e7059aab",
              "name": "Delete all addresses",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2df5b28c-4fc2-41ef-9b51-a00534651f09",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"cleaning-list\");",
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}?ids={{cleaning-list}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "query": [
                    {
                      "key": "ids",
                      "value": "{{cleaning-list}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Removes all addresses and leaves one as default",
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "9009be59-3d2e-4e7d-877b-cc4cf301e8d9",
      "name": "/v2/products",
      "item": [
        {
          "_postman_id": "04a7810a-0b28-4e4f-b750-50b390d991b3",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "70e352ea-3666-46df-a164-32277ac6958b",
              "name": "No limit",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 10 products when no limits are applied\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(10);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "3c80c2bd-4b5e-4b11-9a2b-e7a7e3fd7226",
              "name": "Category - New Arrivals",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(3);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=10",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "d54ddb1e-5a77-47f6-ab0b-d96c59b4da31",
              "name": "Category - does not exist",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Get category does not exist error\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=99999",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "99999"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "3c20288b-a6b0-4ed2-b9d6-2af6f5fc03e0",
              "name": "Page 1, Limit 4",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(4);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?page=1&limit=4",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "4"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "afc21476-17ee-48e3-90f4-1bad256e36b9",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "a3fd5aba-aa93-441f-9c56-e88506abd2d1",
              "name": "No limit",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 10 products when no limits are applied\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(10);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "0bf3ff3c-f040-4451-ad0e-33fffec8e880",
              "name": "Category - New Arrivals",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(3);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=10",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "bd5837a6-323b-4bb7-8e99-a55a9452fe3c",
              "name": "Category - does not exist",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Get category does not exist error\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=99999",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "99999"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "e7c63f84-6453-4f43-a764-4795f4a7d6cc",
              "name": "Page 1, Limit 4",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(4);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?page=1&limit=4",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "4"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "b46f7045-4730-4b97-ad5a-0ecc51df3daa",
      "name": "/v2/products/:id",
      "item": [
        {
          "_postman_id": "b8ceb244-beb9-4446-84d0-27b99212da3a",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "9db716f8-3ea6-471d-9055-a71908a46bae",
              "name": "Bundled: 447",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed bundled. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('bundle');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('447');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/447",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "447"
                  ]
                },
                "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
              },
              "response": []
            },
            {
              "_postman_id": "8f9a7abe-844f-4afb-9caa-0329ef91ebf3",
              "name": "Configurable: Skirt",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed configurable. Has stock data. Customer grp 0. Has children.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('configurable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('422');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "    pm.expect(jsonData.children.attributes['92'].id).to.eql('92');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/422",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "422"
                  ]
                },
                "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
              },
              "response": []
            },
            {
              "_postman_id": "33344fcf-3cd9-48f4-9a14-ab4338a2b185",
              "name": "Downloadable: 563",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed donwloadable. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('downloadable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('563');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/563",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "563"
                  ]
                },
                "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
              },
              "response": []
            },
            {
              "_postman_id": "ac99d025-5565-4e41-9519-46b530f85906",
              "name": "Grouped: 439",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed grouped. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('grouped');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('439');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/439",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "439"
                  ]
                },
                "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
              },
              "response": []
            },
            {
              "_postman_id": "b2644a14-f97b-4272-a8dc-92acec9015d2",
              "name": "Nominal: 564",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed nominal. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('virtual');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('564');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "    pm.expect(jsonData.recurring_profile.start_date_is_editable).to.eql('1');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/564",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "564"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "01450352-6de3-4bcf-9239-c45f3659e6c1",
              "name": "Simple: 554",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data. Customer grp 0. No options.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('554');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "    pm.expect(jsonData.has_options).to.eql('0');",
                      "    pm.expect(jsonData.required_options).to.eql('0');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/554",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "554"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "7e856aeb-6bb6-4e20-9b21-bd9487da7a36",
              "name": "Simple: 370 + Options",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data. Customer grp 0.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('370');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      "",
                      "pm.test(\"Product indeed has custom options\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.has_custom_options).to.be.true;",
                      "    pm.expect(jsonData.custom_options[0].product_id).to.eql('370');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/370",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "370"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "b6a3cbcf-720c-48cb-918d-09935f710ea6",
              "name": "GiftCard Physical/dropdown: 454",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f139093-c317-437e-b371-544698256bd2",
                    "type": "text/javascript",
                    "exec": [
                      "//Testing for EE edition specifics",
                      "var jsonData = pm.response.json();",
                      "if (pm.variables.get(\"mage_type\") === 'EE') {",
                      "    pm.test(\"Status code is 200\", function () {",
                      "        pm.response.to.have.status(200);",
                      "    });",
                      "",
                      "    pm.test(\"Product is indeed GC. Has stock data. \", function () {",
                      "        ",
                      "        pm.expect(jsonData.type_id).to.eql('giftcard');",
                      "        pm.expect(jsonData.stock_item.product_id).to.eql('454');",
                      "    });",
                      "} else {",
                      "    pm.test(\"Product is not visible individually\", function () {",
                      "        pm.response.to.have.status(404);",
                      "    });",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/454",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "454"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "56f15a9b-03b3-4b88-a83a-c3d471699948",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "8e310f40-4f13-4a49-b2ef-3d7ad64cef09",
              "name": "Bundled: 447",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed bundled. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('bundle');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('447');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/447",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "447"
                  ]
                },
                "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
              },
              "response": []
            },
            {
              "_postman_id": "9debea4c-f883-488d-96d3-7fd9e49658e2",
              "name": "Configurable: Skirt",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed configurable. Has stock data. Has children.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('configurable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('422');",
                      "    pm.expect(jsonData.children.attributes['92'].id).to.eql('92');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/422",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "422"
                  ]
                },
                "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
              },
              "response": []
            },
            {
              "_postman_id": "b1832d04-4ba7-4619-b181-8f7dc7baecda",
              "name": "Downloadable: 563",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed donwloadable. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('downloadable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('563');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/563",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "563"
                  ]
                },
                "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
              },
              "response": []
            },
            {
              "_postman_id": "61297a3e-cedf-4bb5-ac45-1918b535b19a",
              "name": "Grouped: 439",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed grouped. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('grouped');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('439');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/439",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "439"
                  ]
                },
                "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
              },
              "response": []
            },
            {
              "_postman_id": "d626db16-722c-4301-ad63-c812e36c316b",
              "name": "Nominal: 564",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed nominal. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('virtual');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('564');",
                      "    pm.expect(jsonData.recurring_profile.start_date_is_editable).to.eql('1');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/564",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "564"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "8c6ff15a-ad53-45b6-8b6c-d13de5b283ef",
              "name": "Simple: 554",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data. No options.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('554');",
                      "    pm.expect(jsonData.has_options).to.eql('0');",
                      "    pm.expect(jsonData.required_options).to.eql('0');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/554",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "554"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "fddbce74-c051-4b9b-8d0f-43383d04b822",
              "name": "Simple: 370 + Options",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('370');",
                      "});",
                      "",
                      "pm.test(\"Product indeed has custom options\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.has_custom_options).to.be.true;",
                      "    pm.expect(jsonData.custom_options[0].product_id).to.eql('370');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/370",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "370"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "1c73c37d-6ed9-42ec-8ba2-455d348e2aa3",
              "name": "GiftCard Physical/dropdown: 454",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fff5006d-d64d-4a12-bd06-e20c18783d7c",
                    "type": "text/javascript",
                    "exec": [
                      "//Testing for EE edition specifics",
                      "var jsonData = pm.response.json();",
                      "if (pm.variables.get(\"mage_type\") === 'EE') {",
                      "    pm.test(\"Status code is 200\", function () {",
                      "        pm.response.to.have.status(200);",
                      "    });",
                      "",
                      "    pm.test(\"Product is indeed GC. Has stock data. \", function () {",
                      "        ",
                      "        pm.expect(jsonData.type_id).to.eql('giftcard');",
                      "        pm.expect(jsonData.stock_item.product_id).to.eql('454');",
                      "    });",
                      "} else {",
                      "    pm.test(\"Product is not visible individually\", function () {",
                      "        pm.response.to.have.status(404);",
                      "    });",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/454",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "454"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "c5f85d09-f57e-4d31-a5f6-1b354b7d9c9c",
      "name": "Cart Rules (no coupon)",
      "item": [
        {
          "_postman_id": "95a09fd8-dc95-4446-8893-e3971976a39a",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "7097f044-6f8b-4a23-98e0-53a5ac0d72a3",
              "name": "Buy X get Y free",
              "item": [
                {
                  "_postman_id": "f97a4ba9-ef54-4f99-9d6e-baf72bfd5679",
                  "name": "Create customer cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "97a9fc57-f73b-4706-b655-04059d190db5",
                  "name": "Add Configurable: Boots",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 2,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "d90a8571-28bf-40fd-a919-df8ab33b019d",
                  "name": "Buy one get one free",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bb9c069e-9b1a-4913-9cf5-fd528527fe73",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded cart via ME endpoint\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Boots in cart with one added free\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.items_qty).to.eql(\"2.0000\");",
                          "    pm.expect(parseFloat(jsonData.grand_total)).lessThan(471.0000);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/me",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "me"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "This cart rule ID is 38. Needs to have 2+ items from category Shoes to make one free. 1 use per customer. Customer group: General, VIP, Private Sales Member(EE)",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "2bf14532-ef26-46b4-be39-d3e1cc2d2531",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "a515fda3-4195-4c8d-ad3c-1d01b9994a00",
              "name": "Qty > 5",
              "item": [
                {
                  "_postman_id": "b90ce2a3-1360-4615-a72d-165366e82992",
                  "name": "/carts: Guest Cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                  },
                  "response": []
                },
                {
                  "_postman_id": "6ed81d27-2d3a-4bb0-bbf7-56c1e2749a0b",
                  "name": "Add grouped: qty6",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"439\",\n\t    \"qty\": 1,\n\t    \"super_group\": {\n\t      \"541\" : 6\n\t    }\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
                  },
                  "response": []
                },
                {
                  "_postman_id": "ab407e53-6009-4df3-859d-387d89dce86c",
                  "name": "Cart has discount",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//Tests customer segments, but they are a tricky beast as they get picked up",
                          "//from customer frontend session + log. This needs to be revistied.",
                          "if (pm.environment.get(\"mage_type\") === 'EE' && false) {",
                          "    pm.test(\"We have a 15 off discount\", function () {",
                          "        var jsonData = pm.response.json();",
                          "        pm.expect(jsonData.totals.discount.value).to.eql(\"-15.0000\");",
                          "    });",
                          "}",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "description": "Tests cart rule combinations that do not have a coupon code attached to them"
    },
    {
      "_postman_id": "320b0b4e-ed6a-4545-a45b-30678ad5515d",
      "name": "/v2/categories",
      "item": [
        {
          "_postman_id": "3146caba-0ada-405c-8535-66ddf6dddb1d",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "d350441c-f11f-4985-b402-b97458003eb3",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{customer-access-token}}",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d0079da7-ef5b-476f-a922-53fadcc3b9ba",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c3bb5423-bf5c-461f-821c-10556c7d9556",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "3682a913-1ac3-4e15-8310-53f9dd2290d9",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "b5bc9766-3cd9-48cb-ba15-56f25918f8a8",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{guest-access-token}}",
                "type": "string"
              }
            ]
          },
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "bcfc8a6b-8215-4e1c-a187-a315d762688e",
      "name": "/v2/categories/:id",
      "item": [
        {
          "_postman_id": "44602410-fbd4-4795-a348-5ebc66af78f6",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "a5b7a5e1-e668-496c-ac8b-1a412a2db15d",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}/1",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ],
                  "path": [
                    "1"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{customer-access-token}}",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d0079da7-ef5b-476f-a922-53fadcc3b9ba",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c3bb5423-bf5c-461f-821c-10556c7d9556",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "6ccf84c0-b555-4814-8fb1-a118207992f9",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "7b822498-ccd3-472d-a3b4-c8a3102da0b1",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}/1",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ],
                  "path": [
                    "1"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{guest-access-token}}",
                "type": "string"
              }
            ]
          },
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "42f7521b-8f9c-4df3-9fea-e39ec66fc9bb",
      "name": "auth/token: CORS",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "a1b98b3b-08b0-4097-8485-7897b41843c2",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Successful CORS call per definition\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "tests[\"Body is empty\"] = responseBody === \"\";",
              "tests[\"Allow-Headers is proper\"] = postman.getResponseHeader(\"Access-Control-Allow-Headers\") === 'Content-Type,Version,Authorization,PHP_AUTH_USER,PHP_AUTH_PW';",
              "tests[\"Allow-Methods are proper\"] = postman.getResponseHeader(\"Access-Control-Allow-Methods\") === 'GET, POST, PUT, UPDATE, DELETE, OPTIONS';",
              "tests[\"Allow-Origin is *\"] = postman.getResponseHeader(\"Access-Control-Allow-Origin\") === '*';"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Access-Control-Request-Method",
            "value": "POST"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": {
          "raw": "{{domain}}{{endpoint_auth_token}}",
          "host": [
            "{{domain}}{{endpoint_auth_token}}"
          ]
        }
      },
      "response": []
    }
  ]
}
