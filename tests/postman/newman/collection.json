{
  "info": {
    "_postman_id": "ebfa6c75-7385-47e4-89e2-e7769174325f",
    "name": "Mage Cloud",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "fe793efd-1717-46dc-8639-ada3f6c48d3f",
      "name": "oAuth2",
      "item": [
        {
          "_postman_id": "e54182ca-f47f-428d-8478-b0e48f3488ea",
          "name": "Token: client_credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1e0e280-a6cd-499c-b353-2e9bb4695a0a",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"guest-access-token\", jsonData.access_token);",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "    pm.response.to.not.have.jsonBody('refresh_token');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "eda3b173-3d4b-4787-82e0-8af248536334",
          "name": "Token: password",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "655aca92-7b3a-43c5-98cf-f8b614d02964",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"refresh-token\", jsonData.refresh_token);",
                  "    pm.environment.set(\"customer-access-token\", jsonData.access_token);",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('refresh_token');",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"password\",\n  \"username\": \"{{username1}}\",\n  \"password\": \"{{password}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "3d2fcbdf-b2c4-4080-b866-ee20a2b07a99",
          "name": "Token: password (user2)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "53376f26-24e1-4e9d-ad88-41b72df911fc",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"customer-access-token-2\", jsonData.access_token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"password\",\n  \"username\": \"{{username2}}\",\n  \"password\": \"{{password}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "9a33d6d9-1930-45dd-9a26-2420ae8e6057",
          "name": "Token: authorization_code",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e455c6e7-0555-4b6e-a1e9-e4df1e547257",
                "type": "text/javascript",
                "exec": [
                  "if (false) { //skip for now as there is no good way to test",
                  "    if (responseCode.code === 200) {",
                  "        var jsonData = pm.response.json();",
                  "        pm.environment.set(\"guest-access-token\", jsonData.access_token);",
                  "    }",
                  "    ",
                  "    pm.test('Successfull call', function(){",
                  "        pm.response.to.be.success;",
                  "    });",
                  "    ",
                  "    pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "        var jsonData = pm.response.json();",
                  "        pm.response.to.have.jsonBody('token_type','Bearer');",
                  "        pm.response.to.have.jsonBody('expires_in', 3600);",
                  "        pm.response.to.have.jsonBody('access_token');",
                  "        pm.response.to.have.jsonBody('scope', null);",
                  "    });",
                  "}",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "3092705d-cd39-4811-b8df-1c6636d785a4",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"authorization_code\",\n  \"code\": \"1b8e9872e7fb093a71482ea13902f28b2ad1c4e5\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "64d3637d-3d4c-4e1f-8aa4-22728ea7514a",
          "name": "Token: refresh_token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c3019287-a9f7-445b-af8b-bd18971c4751",
                "type": "text/javascript",
                "exec": [
                  "if (responseCode.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"customer-access-token\", jsonData.access_token);",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"refresh_token\",\n  \"refresh_token\": \"{{refresh-token}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "c668ee9a-fb4b-40a9-9d7c-bdb35eee782d",
          "name": "Token: refresh_token re-use",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d078640e-9115-4b6e-8c25-7a6122a8c838",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test('New access token differs from the old', function() { ",
                  "    pm.expect(pm.environment.get(\"customer-access-token\")).to.not.equal(jsonData.access_token);",
                  "});",
                  "",
                  "pm.test(\"Response follows the correct json oAuth2 specifications\", function () {",
                  "    pm.response.to.have.jsonBody('token_type','Bearer');",
                  "    pm.response.to.have.jsonBody('expires_in', 3600);",
                  "    pm.response.to.have.jsonBody('access_token');",
                  "    pm.response.to.have.jsonBody('scope', null);",
                  "});",
                  "",
                  "if (jsonData.hasOwnProperty('access_token')) {",
                  "  pm.environment.set(\"customer-access-token\", jsonData.access_token);  ",
                  "}",
                  "",
                  "pm.environment.unset(\"refresh-token\");"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "PHP_AUTH_USER",
                "value": "{{client_id}}"
              },
              {
                "key": "PHP_AUTH_PW",
                "value": "{{client_secret}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"grant_type\": \"refresh_token\",\n  \"refresh_token\": \"{{refresh-token}}\",\n  \"client_id\": \"{{client_id}}\",\n  \"client_secret\":\"{{client_secret}}\"\n}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_auth_token}}",
              "host": [
                "{{domain}}{{endpoint_auth_token}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "1b553b18-b68f-4480-8c30-9f36c1971f32",
      "name": "/v2/carts | /v2/carts/:id",
      "item": [
        {
          "_postman_id": "9e02a3eb-b084-442b-810f-f452248dd76a",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "7d4161df-7281-465f-87a3-bd7408377f38",
              "name": "Create customer cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a customer cart"
              },
              "response": []
            },
            {
              "_postman_id": "060c77db-3cbb-46d2-8d1e-77e364602bb4",
              "name": "Get Cart via ME endpoint",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded cart via ME endpoint\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/me",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "me"
                  ]
                },
                "description": "Creates a customer cart"
              },
              "response": []
            },
            {
              "_postman_id": "9b12aa94-811c-4a45-be03-e83502960899",
              "name": "Get cart via {cartId}",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "{{cartId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "5d8f3c52-69a9-45af-b05c-06e5d1613b0e",
              "name": "Use bad cartID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Bogus quote cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/000",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "000"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "031bca06-dcf2-4162-ad3a-a43a175f1e74",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "0e9580e0-97c1-4ea0-b7ad-e635b3156d83",
              "name": "ME endpoint as guest",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"loading ME endpoint as guest fails\"] = responseCode.code === 400;"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/me",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "me"
                  ]
                },
                "description": "calls a ME endpoint"
              },
              "response": []
            },
            {
              "_postman_id": "b0958f27-004b-436f-bddc-7acb91c2b228",
              "name": "Customer Quote as guest",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 403\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "{{cartId}}"
                  ]
                },
                "description": "calls a customer cart as guest"
              },
              "response": []
            },
            {
              "_postman_id": "066dd8ea-530a-46c2-b06c-3e5b309c49bf",
              "name": "Create guest cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
              },
              "response": []
            },
            {
              "_postman_id": "0e65e3c0-77af-447d-8e63-eb2e451ec39d",
              "name": "Guest Quote as guest",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Loading guest quote as guest\"] = responseCode.code === 200;"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ],
                  "path": [
                    "{{cartId}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "62125f90-01fe-4f00-ba25-64004b656248",
      "name": "/v2/carts/:id/items",
      "item": [
        {
          "_postman_id": "3a299740-3283-4771-950a-c062a4f8de79",
          "name": "Product",
          "item": [
            {
              "_postman_id": "6ab95867-6f3a-4e0d-97b7-eb90ad88483b",
              "name": "Customer - Add",
              "item": [
                {
                  "_postman_id": "8acde642-4854-42dd-ae00-50a8f7de343c",
                  "name": "/carts: customer",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "553967a4-f493-4dc1-a1dd-7f605d43cc99",
                  "name": "Bundle + Configurable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n      \"product_id\": \"447\",\n      \"qty\": 2,\n      \"bundle_option\": {\n        \"23\": \"88\",\n        \"24\": \"91\"\n      },\n      \"bundle_option_qty\": {\n        \"23\": \"3\",\n        \"24\": \"4\"\n      }\n    }\n  },\n  {\n    \"product\": {\n       \"product_id\": \"422\",\n    \t\"qty\": 1,\n    \t\"super_attribute\": {\n           \"92\": \"17\",\n           \"180\": \"76\"\n        }\n    }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "e8a9c929-587f-4962-bb7a-706462d82b4f",
                  "name": "Add Configurable: Skirt",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "f652522d-6347-4b3d-bace-a6a9308b3dea",
                  "name": "Add Configurable: Skirt via SKU",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"sku\": \"wsd000c\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "50b9247d-3f88-480e-bb96-bf61437aed16",
                  "name": "Bundled",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"447\",\n\t    \"qty\": 2,\n\t    \"bundle_option\": {\n\t      \"23\": \"88\",\n\t      \"24\": \"91\"\n\t    },\n\t    \"bundle_option_qty\": {\n\t      \"23\": \"3\",\n\t      \"24\": \"4\"\n\t    }\n\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
                  },
                  "response": []
                },
                {
                  "_postman_id": "b2ae8b63-9933-42f0-a520-6b3138928c2e",
                  "name": "Downloadable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"563\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
                  },
                  "response": []
                },
                {
                  "_postman_id": "db055d09-ee79-4064-bbf1-7e60757392dd",
                  "name": "Grouped",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"439\",\n\t    \"qty\": 1,\n\t    \"super_group\": {\n\t      \"541\" : 2\n\t    }\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
                  },
                  "response": []
                },
                {
                  "_postman_id": "782237bf-3882-4c70-979d-72200ea9ed9e",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "7d18b4ff-e566-4836-b002-20dda167d208",
                  "name": "GiftCard Combined",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "80c8e513-1bca-429b-a1fb-9b129d4f7efe",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif001\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"75\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Combined type Gift card with custom price"
                  },
                  "response": []
                },
                {
                  "_postman_id": "0115f950-0cc6-4edd-ab64-a63a78e31f77",
                  "name": "GiftCard Virtual CP",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fa327b11-c19c-48fb-b431-b26cdbe5f546",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif003\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"50\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                },
                {
                  "_postman_id": "8d8d085e-de30-4c2d-a2d0-5d9fbcf6b6a0",
                  "name": "GiftCard Virtual Set",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e40fb867-1ea6-49a3-8742-cbd3f98c0247",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif002\",\n\t    \"qty\": 1,\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "6f28ddc6-381f-4f12-b06b-140c415106ce",
              "name": "Customer - Update",
              "item": [
                {
                  "_postman_id": "6d6aecd2-352f-4e00-bf62-79ade2122b4e",
                  "name": "/carts: customer",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "cc71a458-2e94-458f-8929-991962c2745a",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "8869c1c9-f921-4ebd-89be-d01ec47afce0",
                  "name": "Get cart contents",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                          "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                          "} else {",
                          "    tests[\"Not 200 code or no cart items returned\"] = false;",
                          "}",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                          "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "7c62dfb7-e7d0-431d-a9c4-c2910000844a",
                  "name": "Update simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n  \t\"cartItemId\": \"{{cart_item_id}}\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "1cb66302-83b6-44cc-9b13-e24f0263fd9f",
                  "name": "Get cart contents",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "4a3d5625-5b71-4142-b5d2-31d6a3141297",
              "name": "Customer - Delete",
              "item": [
                {
                  "_postman_id": "4f449c19-e55c-4698-82fd-7db984bb21df",
                  "name": "All item removal",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "85786676-136b-48ab-94c7-246183ba41bd",
                  "name": "Check cart for no items",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"No items in cart\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.items).to.be.empty;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "758628c3-ade7-45c5-87c0-869c2fa1fe0a",
              "name": "Customer - Errors",
              "item": [
                {
                  "_postman_id": "500c6f91-958d-4e08-8ac6-199313d290d0",
                  "name": "Bad product ID",
                  "item": [
                    {
                      "_postman_id": "8dd25055-a64c-4733-a035-6ea3efd2a914",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "d39e7be2-dcfd-4479-8e72-c780ac5c94df",
                      "name": "Cfg + non-existing",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Product does not exist\", function () {",
                              "    pm.response.to.have.status(404);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n       \"product_id\": \"422\",\n    \t\"qty\": 1,\n    \t\"super_attribute\": {\n           \"92\": \"17\",\n           \"180\": \"76\"\n        }\n    }\n  },\n  {\n    \"product\": {\n\t    \"product_id\": \"9999\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "fc39363a-ec51-4c6b-9a61-5f9fc6abed23",
                      "name": "Cart should be empty",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No products were added\", function () {",
                              "    pm.expect(jsonData.items.length).to.eql(0);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "8b5a74a6-f491-4dd0-bc23-20912ec202e9",
                  "name": "Out of stock",
                  "item": [
                    {
                      "_postman_id": "2d8db04c-7ac1-42e7-97f9-a99033409b0e",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.cartId) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e98a3656-98f7-477a-ab40-2bc618a351c6",
                      "name": "Add simple, qty 999",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 999\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "d971f464-00aa-4896-8782-f28b8426b336",
                      "name": "Check cart errors",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is indeed 999\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(999);",
                              "});",
                              "",
                              "pm.test(\"Cart has errors\", function () {",
                              "    pm.expect(jsonData.has_error).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Item has errors & error array\", function () {",
                              "    pm.expect(jsonData.items[0].has_error).to.eql(true);",
                              "    pm.expect(jsonData.items[0].errors).to.not.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "fe9b4297-695e-4d14-adbe-8c4795f9769d",
                  "name": "Minimum order amount",
                  "item": [
                    {
                      "_postman_id": "7d644636-2926-45cc-86e8-b2cf6500bde7",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.cartId) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "9dc27951-eee3-4f9d-9247-7bfdb244ca2d",
                      "name": "Add simple, qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"395\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 559\nType: Downloadeable\nName: If You Were by Keshco\nSKU: hbm006\nURL: if-you-were-by-keshco\nCategory: Books & Music\nPrice: $2.00\nQty: 1"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "89b1ac6b-022f-48b2-b304-a47f61045243",
                      "name": "Check cart errors",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8e283f85-23bb-447b-b1ba-904f6e460266",
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is indeed 1\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                              "});",
                              "",
                              "pm.test(\"Cart has errors\", function () {",
                              "    if (pm.variables.get(\"minimum_order_active\") === '1') {",
                              "        pm.expect(jsonData.has_error).to.eql(true);",
                              "        pm.expect(jsonData.errors).to.not.be.empty;",
                              "    } else {",
                              "        pm.expect(jsonData.has_error).to.not.exist;",
                              "        pm.expect(jsonData.errors).to.not.exist;",
                              "    }",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "9450e43f-5a12-4d00-ba66-946ad1f02107",
              "name": "Guest - Add",
              "item": [
                {
                  "_postman_id": "e853662b-1fee-46f4-8285-4bd83961ed81",
                  "name": "Nominal product",
                  "item": [
                    {
                      "_postman_id": "d074416b-c494-416b-bdfc-b9acf984596e",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "80f6dc22-def6-408a-ad48-f2f446dbd554",
                      "name": "Nominal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"mem000\",\n\t    \"qty\": 1,\n\t    \"options\": {\n\t      \"6\": {\n\t        \"month\": \"01\",\n\t        \"day\": \"17\",\n\t        \"year\": \"2017\"\n\t      }\n\t    },\n\t    \"recurring_profile_start_datetime\":\"09/15/2017 09:49 PM\"\n\t  }\n  }\n]\n\n"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Nominal and recurring profile item"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "087df63d-ad9f-4915-844e-efbd4d04eb29",
                      "name": "Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Cannot add another product with nominal in cart\", function () {",
                              "    pm.response.to.have.status(400);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "b0b12479-eea3-4614-b376-8c687381471d",
                  "name": "/carts: Guest Cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                  },
                  "response": []
                },
                {
                  "_postman_id": "a86c1a26-29c6-491b-af70-7540559076e9",
                  "name": "Bundle + Configurable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n      \"product_id\": \"447\",\n      \"qty\": 2,\n      \"bundle_option\": {\n        \"23\": \"88\",\n        \"24\": \"91\"\n      },\n      \"bundle_option_qty\": {\n        \"23\": \"3\",\n        \"24\": \"4\"\n      }\n    }\n  },\n  {\n    \"product\": {\n       \"product_id\": \"422\",\n    \t\"qty\": 1,\n    \t\"super_attribute\": {\n           \"92\": \"17\",\n           \"180\": \"76\"\n        }\n    }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "7a3c3f64-7f0b-4a6b-8033-c5e17c9aecca",
                  "name": "Add Configurable: Skirt",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "78e4b95d-47c5-4ef3-a8e3-369e653f81ac",
                  "name": "Bundled",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"447\",\n\t    \"qty\": 2,\n\t    \"bundle_option\": {\n\t      \"23\": \"88\",\n\t      \"24\": \"91\"\n\t    },\n\t    \"bundle_option_qty\": {\n\t      \"23\": \"3\",\n\t      \"24\": \"4\"\n\t    }\n\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
                  },
                  "response": []
                },
                {
                  "_postman_id": "552d44c6-1510-4d24-acb3-39bbb30c00fb",
                  "name": "Downloadable",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"563\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
                  },
                  "response": []
                },
                {
                  "_postman_id": "c2bccea7-f77c-413c-80a0-7f8883fe3473",
                  "name": "Grouped",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"439\",\n\t    \"qty\": 1,\n\t    \"super_group\": {\n\t      \"541\" : 2\n\t    }\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
                  },
                  "response": []
                },
                {
                  "_postman_id": "54d59b08-aae8-42f2-a858-89cc18dc00d5",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "9b527688-db01-4f1c-b0a5-92c8ee5d3459",
                  "name": "GiftCard Combined",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2721dfff-e833-4863-b072-cf5ddd78ce2d",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif001\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"75\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Combined type Gift card with custom price"
                  },
                  "response": []
                },
                {
                  "_postman_id": "1a7db155-e3dd-4e09-bbe1-8b19417c1f4d",
                  "name": "GiftCard Virtual CP",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6949ae5b-fa51-4534-a9f1-9cddb7881023",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif003\",\n\t    \"qty\": 1,\n\t    \"custom_giftcard_amount\": \"50\",\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                },
                {
                  "_postman_id": "08bd61fb-f2e6-49da-a5a7-96b197ba5827",
                  "name": "GiftCard Virtual Set",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0edd61ba-1533-4c9e-8bf7-a0ca2691d49a",
                        "type": "text/javascript",
                        "exec": [
                          "if (pm.variables.get(\"mage_type\") === 'EE') {",
                          "    pm.test('Successfull call', function(){",
                          "        pm.response.to.be.success;",
                          "    });",
                          "} else {",
                          "    pm.test(\"Giftcards don't exist in the Community edition\", function () {",
                          "        pm.response.to.have.status(404);",
                          "    });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"sku\": \"gif002\",\n\t    \"qty\": 1,\n\t    \"giftcard_sender_name\": \"Some sender name\",\n\t    \"giftcard_sender_email\": \"test@shopgate.com\",\n\t    \"giftcard_recipient_name\": \"Some recipient name\",\n\t    \"giftcard_recipient_email\": \"test2@shopgate.com\",\n\t    \"giftcard_message\": \"Message to recipient\"\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "Virtual card with custom price set"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "b6adf5e1-5a30-4f19-b754-593365add52e",
              "name": "Guest - Update",
              "item": [
                {
                  "_postman_id": "e7351404-35d7-4d7e-91a9-5f806da7f2e3",
                  "name": "Advanced",
                  "item": [
                    {
                      "_postman_id": "4a56328c-a820-4fbb-ae7d-d50a1c0bcd99",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "28b8a0d2-61a6-4d13-a451-ce2438365989",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "17dc6805-34b5-4694-b5a2-0dcc073e5699",
                      "name": "Cart: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "calls a customer cart as guest"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e9623f01-6680-4ea3-9452-89db6abf71cc",
                      "name": "Update simple & add confg",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n  \t\"cartItemId\": \"{{cart_item_id}}\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n  },\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "5c081093-1363-4821-b873-7645b8503d13",
                      "name": "Cart: qty updated",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is now updated to 3 for the previously inserted simple product & qty 1 for the configurable\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                              "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "6cd86c24-6bae-491b-b25e-8ad60ad12cd4",
                  "name": "/carts: Guest Cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                  },
                  "response": []
                },
                {
                  "_postman_id": "0b7b064d-1347-4b0c-a653-ae5903d41216",
                  "name": "Add Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "72792731-3933-4562-b392-eeca292b9b8c",
                  "name": "Cart: qty 1",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                          "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                          "} else {",
                          "    tests[\"Not 200 code or no cart items returned\"] = false;",
                          "}",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                          "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    },
                    "description": "calls a customer cart as guest"
                  },
                  "response": []
                },
                {
                  "_postman_id": "6b99161a-b24b-47c2-b2f6-65b6292cb682",
                  "name": "Update simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n  \t\"cartItemId\": \"{{cart_item_id}}\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                },
                {
                  "_postman_id": "2eccd4a3-9b1c-4f68-8f9f-82b231da1fab",
                  "name": "Cart: qty updated",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "3d493802-55b3-4ed8-90e8-8d136821471d",
                  "name": "Simple",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "1c9f1ed1-38ab-4fbb-aeb1-db422cc96ee2",
              "name": "Guest - Delete all",
              "item": [
                {
                  "_postman_id": "bb3f48d9-86a7-49a9-a2cf-7ffae748dbee",
                  "name": "Delete All",
                  "item": [
                    {
                      "_postman_id": "487594a1-ed92-42f2-a5ee-9b62647dd672",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "2e8d6604-2fda-4202-b401-2d46073cba80",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "aa2c0c87-f174-4116-9d30-2ed1e372c32e",
                      "name": "All item removal",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "28e6d6e8-5e92-42bf-afaf-89123233bb44",
                      "name": "Check cart for no items",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "7f9f240a-d09c-431d-a956-cbcab62ec8d1",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "98e65ed3-8391-46e4-89b1-a4484e49041c",
                  "name": "Delete by IDs",
                  "item": [
                    {
                      "_postman_id": "771e89f3-2831-423b-a35e-86f0cbe3d7b5",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "9e52785f-6fcd-4f82-89ba-2c44e5be90d9",
                      "name": "Get all cart item ids",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    var items = '';",
                              "    jsonData.items.forEach(function(item) {",
                              "        items += item.item_id + ',';",
                              "    });",
                              "    pm.environment.set(\"cart_items_to_remove\", items);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "6152815d-d61e-4984-8399-36a916c9f0b6",
                      "name": "{cartId}/items?cartItemIds",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds={{cart_items_to_remove}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "query": [
                            {
                              "key": "cartItemIds",
                              "value": "{{cart_items_to_remove}}"
                            }
                          ]
                        },
                        "description": "Delete cart items by ids provided"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "b8240df5-3c20-4722-bb9a-e3be4c91d6ca",
                      "name": "Check all items are deleted",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "description": "Retrieves the items in the cart and deletes them using their id's",
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "b9c181fa-204a-4382-8a9e-35ffb7159ba7",
          "name": "Coupon",
          "item": [
            {
              "_postman_id": "e8e3edb6-eca2-4468-949f-675a12406664",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "c5b302e6-0326-420b-89fd-b9512cfbe7c8",
                  "name": "Add",
                  "item": [
                    {
                      "_postman_id": "59f314d1-8511-4ccd-bb10-229e0f666ec0",
                      "name": "Auto-Gen",
                      "item": [
                        {
                          "_postman_id": "b49db3a1-531f-46b4-8b54-9bca52b8cc73",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "cfb8a0ef-b1e4-454d-a4bd-b56b7c34515e",
                          "name": "Add Simple: 500",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "9f1285ba-b99b-4b6d-a35c-0f77b0b317cd",
                          "name": "Add 10% off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"3I5REXK80NUN\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Autogenerated coupon code.\nCondition for coupon is:\nGroup: Not-Logged-In, General, VIP, Wholesale; \nIf item in cart has \"Price in cart\" = 500"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "8bd42eb9-c02b-4db1-b7a7-600988ce7e53",
                          "name": "Check coupon exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"3I5REXK80NUN code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"3I5REXK80NUN\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "d74214ce-7ead-4411-87b2-f692d7f7427f",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "c8486036-7057-4bec-9170-ae4eda4be3eb",
                      "name": "Add Configurable: Boots",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "f5a88308-1297-4265-8c69-20b4ebed7d31",
                      "name": "Check no discount",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e53a0728-70cb-4b43-90ed-5bbf7c2160c2",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "b90338e7-0b03-40f4-87ec-b994ca425c78",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "021dc967-5e54-4cdd-b9fb-7ab84b37980e",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "e8dde8b0-a927-43eb-84c7-edce3b1c54ff",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "144e3570-75c4-44bc-b6df-8f0bfb79a887",
                      "name": "Add Configurable: Boots",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "c14b9f56-0aba-4c5f-89c9-a327512c5b81",
                      "name": "Check no discount",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "df3ac45a-dbe9-4bef-b5e2-111afefd2eb9",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8b760329-1341-4192-9308-7b50c2b7dad2",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "6cafe581-6f31-4e4f-beb6-0931771acc81",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "88806be3-6baf-4229-a7f2-98862cb91902",
                      "name": "Add 25% off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"25OFF\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Conditions: for customer group General and Category: Apparel"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "3f269fb4-54fc-47e9-b2ec-4196350df2a3",
                      "name": "Check 25OFF exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"25 off code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"25OFF\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "e0895eeb-dddd-4eea-8baf-354d36d58024",
                      "name": "Add 10 flat via Update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\t\t\n  \t\t\"cartItemId\": \"1234\",\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "29c785d3-7902-4dea-b4fa-35f03329e635",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "347dd29d-b87c-457c-b944-c94d823bf3f5",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "c9b7ddb4-0702-43f6-a953-e39094350159",
                      "name": "Add empty coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    }
                  ],
                  "description": "Run after the add tests",
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "8e9219da-0574-47ec-9782-55cfc92673e6",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "fdf74284-22a4-4f85-94e1-e865b3badc00",
                      "name": "Via Empty Add",
                      "item": [
                        {
                          "_postman_id": "8b0ce91c-e036-478d-aacd-fcb3c742ade9",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "b8e717f5-48f8-4c9d-82f7-c2d61f7ecd9b",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "eddb2243-d78b-4f25-bcd0-d58ee8867be4",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "97c14fad-2e78-4958-bab0-cbcd96cc6395",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "d862e507-fd1e-4949-bb90-17be91c1e300",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1537e83b-c44a-41c5-a78f-1ac3db30736c",
                          "name": "Add empty coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "246c8195-48b3-40fb-a4f3-4d88b6240a9c",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "2367853c-3b10-4804-8634-2471cd37bc3d",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "82f74f72-26cf-4fbc-ae8d-cbe696f04711",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "51b2334a-d08e-4fec-9b83-840063e56242",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "d3216247-55dd-4195-89bb-257aadcc2ded",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "2c6fb9ac-e7dc-443f-af5e-0571e6bfbc2f",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "9524aee2-9da8-48b0-887e-64b57cc3530f",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "9a4511cd-bb73-4cf9-86d1-22a4d940fb98",
                          "name": "Use ?cartItemIds=",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds=COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "COUPON_XXX"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "5bc3bf91-264b-4c73-9fe5-caed2137a89d",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.not.empty;",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "7096e219-4f21-46f8-9a02-c915f125f1f0",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "8c0d9a3b-4786-4db8-a0e6-86bfe187ace9",
                  "name": "Add",
                  "item": [
                    {
                      "_postman_id": "bace1fc7-2c29-4bdf-9b0a-e9e1cdeb31bc",
                      "name": "Auto-Gen",
                      "item": [
                        {
                          "_postman_id": "22e6ab48-da78-4735-bb1d-8c19ddcaba84",
                          "name": "/carts: Guest Cart",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f01a41d6-836b-45b2-848d-ffda512c2425",
                          "name": "Add Simple: $500",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "dddc6129-7074-411d-ae52-241b900fc069",
                          "name": "Add 10% off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"3I5REXK80NUN\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Autogenerated coupon code.\nCondition for coupon is:\nGroup: Not-Logged-In, General, VIP, Wholesale; \nIf item in cart has \"Price in cart\" = 500"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "4e17d30f-b651-480e-94f6-0a76fde20fdf",
                          "name": "Coupon is in cart",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"3I5REXK80NUN code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"3I5REXK80NUN\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "cee5e2d7-eac4-4c99-aeb8-13a8c3158bd9",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "3e12a722-0815-441b-bb7e-3a7d0b94f7a1",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "4548a6f9-c0ce-4971-bf19-4c15fb09c7dd",
                      "name": "Add 15 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "a2c2ce77-6958-4396-9408-98cabda5e242",
                      "name": "Check evening15 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"evening15 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "ae9f3e03-fee6-4205-811e-4aeda27037b3",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "fb38afde-3742-4458-892f-06e565bcb98d",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "78404c54-84d5-4fcb-894a-97e582818eb1",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "3f1970c3-373b-40c9-9918-35500f46a6bf",
                      "name": "Add 15 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "978a0a25-3b9f-4ea6-8f05-82c6721166c7",
                      "name": "Check evening15 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"evening15 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "fd7f4a7e-8dd1-4211-a268-51f19cdb1f45",
                      "name": "Update with empty",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n  \t\t\"cartItemId\": \"1234\",\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "d8e17c7c-ed34-4d41-8eab-18475892fe59",
                      "name": "Check no discount",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "57c77812-8fa2-4633-9249-cd79fe24bd1e",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "b16f532d-8563-492f-bf35-f05d3a26d4ea",
                      "name": "Via Empty All",
                      "item": [
                        {
                          "_postman_id": "4787502f-ac0f-4008-8c52-55a90d474029",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "c517684a-d56c-4205-8230-5dcc3f005531",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "e33d3b65-3291-4a90-93e6-66aeb0ebc41b",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "7fc8a5e0-098f-48c3-8e26-316a2763ba81",
                          "name": "Check evening15 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "7897b88d-80aa-4379-94b4-d51c601ab520",
                          "name": "Add empty coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "5ba17c27-274f-471f-a37d-57780b129db0",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "19bdc0e6-1118-4bfe-be95-1c8fdd8b2c6a",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "4fd2dd55-3cae-4795-b892-e7bd948b0017",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "76821ef6-d6e7-422d-947c-a7837be1f246",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f8cfecaf-dc6d-49c5-ad06-f38662a1b5e0",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "b9289a30-2172-4846-b840-6b161eb2625e",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "5789c930-aa05-4aa2-afab-2dc005d18366",
                          "name": "Check evening15 exists copy",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "e4479c2c-04fd-498d-a52f-32e055a52895",
                          "name": "Use ?cartItemIds=",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds=COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "COUPON_XXX"
                                }
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "2ceb1a64-46ab-4ad5-89db-adeda13ee4e6",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.not.empty;",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "047186b5-f191-4026-ae01-cb1cbaf2f94e",
          "name": "Mixed",
          "item": [
            {
              "_postman_id": "8ee6df42-aaef-4c33-8024-9782eedf59e7",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "fe993612-09b4-44a0-8a37-e3ed3ed4cb7d",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "5607bd61-7a30-4ae8-8dae-e4b2ec31db10",
                      "name": "Product first",
                      "item": [
                        {
                          "_postman_id": "1f7de29c-8d98-4ff3-854e-f764d56d107d",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "cd3239d7-cea9-4cf0-903a-5cb019bfb68a",
                          "name": "Add Configurable + Coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  },\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "e1a20fbc-700b-42bd-851b-aac381508de3",
                          "name": "Check code + product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});",
                                  "",
                                  "pm.test(\"Configurable product is in cart\", function () {",
                                  "    pm.expect(jsonData.items.length).to.be.eql(2);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "afcdf266-b07a-489f-8406-18c80569f0f3",
                      "name": "Product last",
                      "item": [
                        {
                          "_postman_id": "e7b24f38-fbbe-47fe-9283-a3dfb2af8cc0",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f256a43b-7f57-466d-9412-62b5a33a6351",
                          "name": "Add Coupon + Configurable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Cannot add coupon before items are in cart', function(){",
                                  "    pm.response.to.have.status(400);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  },\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "description": "Run after the add tests",
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "ed8284ca-d677-4eb7-bf90-0ed0c267e15c",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "58825d22-405f-480a-8d39-1121f3f3679b",
                      "name": "Via remove all",
                      "item": [
                        {
                          "_postman_id": "101a8588-d14e-41e9-9bf1-376fdcb80148",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "a9b8fbbf-4cc9-44aa-af3d-9dd41aa1f45c",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "29bfc676-28a5-4c84-83b4-43d7b2b5ed4c",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "8cedaf78-17f7-426d-9014-a9cfcdcb35e8",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "84868988-6e3c-4539-9205-7376ec2822ec",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "ab0a966f-e2cf-4509-bd72-766e3ac4df3c",
                          "name": "Remove all items",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "b7c014b6-27d3-4ce5-8ec2-f52a3095532c",
                          "name": "Check no coupon/prods",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"No items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.empty;",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "49f75190-f4cb-4dba-9f2f-cbe0ecb0fb91",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "548fc5ed-86f2-4548-b17e-7ddc50c5ecf3",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "ca8bd796-c9f1-4851-a0fa-2e62c8664015",
                          "name": "Add Configurable: Boots",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f2d15ee5-7a4b-4f30-9efa-48be191c1126",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "ba8f05b2-567c-4d3f-b3a8-989b3b2f9858",
                          "name": "Add 10 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is Group: General, subtotal: 200+"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "3a080465-14f6-432d-a057-92b9b99149ef",
                          "name": "Check Register10 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "5427be05-b092-48e4-86c7-1def114d6340",
                          "name": "CartItemIds > variable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Register10 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                                  "});",
                                  "",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    var items = '';",
                                  "    jsonData.items.forEach(function(item) {",
                                  "        items += item.item_id + ',';",
                                  "    });",
                                  "    pm.environment.set(\"cart_items_to_remove\", items);",
                                  "} else {",
                                  "    tests[\"No cart items returned\"] = false;",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "25376ac0-1733-4ecc-b55d-80425e62dd85",
                          "name": "Add simple product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Swiss Movement Sports Watch, Category: Jewelry, Price: $500.00"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "a37aa87b-721e-40a8-99f0-020435d2d8a3",
                          "name": "Remove config + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds={{cart_items_to_remove}}COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "{{cart_items_to_remove}}COUPON_XXX"
                                }
                              ]
                            },
                            "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "cb5176ec-f440-4fe7-bce0-a7dba84ddf0f",
                          "name": "Check discount/products",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have the 544:Watch product in cart\", function () {",
                                  "    pm.expect(jsonData.items[0].product_id).to.be.eql(\"554\");",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            },
                            "description": "Checks that there is no coupon applied and still have items in cart"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "dfe5201c-1992-472c-9b27-5ffa59725c23",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "9691cea6-8cef-4daf-bfcf-f7463b288f80",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "e0681a33-01ff-4792-909a-0da5122de1bf",
                      "name": "Product first",
                      "item": [
                        {
                          "_postman_id": "14db5257-a99a-40aa-b5bb-4cc11f2c4bc5",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "0f24cc2f-7532-45eb-9117-66880981e4b0",
                          "name": "Add config + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  },\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Essex Pencil Skirt; SKU: wsd000c; Category: Dresses & Skirts; Price: $185.00\nSub-Product:"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "1d55e293-4480-435d-9078-d50aa23ec8a4",
                          "name": "Check code + product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});",
                                  "",
                                  "pm.test(\"Configurable product is in cart\", function () {",
                                  "    pm.expect(jsonData.items.length).to.be.eql(2);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "7b5fa6ad-b890-49ce-9515-575453d40f08",
                      "name": "Product last",
                      "item": [
                        {
                          "_postman_id": "537de690-9ea4-495e-b283-1666d439c258",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "d2956a4c-319c-498a-b07e-62f2e61d83dc",
                          "name": "Add coupon + config",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Cannot add coupon before items are in cart', function(){",
                                  "    pm.response.to.have.status(400);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  },\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Essex Pencil Skirt; SKU: wsd000c; Category: Dresses & Skirts; Price: $185.00\nSub-Product:"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "039ef365-86b0-43ab-b21b-cd49ba89981a",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "36a6b4b2-d087-45a1-b8dd-738cca6bdd81",
                      "name": "Via Empty All",
                      "item": [
                        {
                          "_postman_id": "bed5b051-9adb-450b-94a3-63c3046feb90",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "a7a070d3-d7d8-4507-860b-c72d767fa53a",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "cfa7c6f6-97b8-4c88-bc7a-5b7472f8f13d",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "12f585cf-e9a6-4311-9b85-adb89cf5fe9b",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "271347e3-0a14-49ec-bd07-1620939ff2f0",
                          "name": "Check evening15 exists",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "8d3acf46-03b9-479b-84f6-ea6a312212fa",
                          "name": "Remove all items",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "8e0cd6d6-c459-484e-9942-d7a859cf3de8",
                          "name": "Check no prod + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"No items in cart\", function () {",
                                  "    pm.expect(jsonData.items).to.be.empty;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "89176f05-42a0-4bc6-9091-c3917955c22f",
                      "name": "Via query",
                      "item": [
                        {
                          "_postman_id": "5920a700-6f72-4958-8788-ee80e07edb2d",
                          "name": "/carts: guest",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "9433c62f-239d-4681-ad0d-825c5ddcc6ff",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "014a1cda-7ded-4d7b-bcee-2a00748b0b7f",
                          "name": "Check no discount",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "a728266d-7191-465c-a06f-8a83dd7642cd",
                          "name": "Add 15 flat off coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "ddcb066d-eaf0-48e0-ba6e-bee624a3b2b6",
                          "name": "CartItemIds > variable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"evening15 code exists\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                                  "});",
                                  "",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    var items = '';",
                                  "    jsonData.items.forEach(function(item) {",
                                  "        items += item.item_id + ',';",
                                  "    });",
                                  "    pm.environment.set(\"cart_items_to_remove\", items);",
                                  "} else {",
                                  "    tests[\"No cart items returned\"] = false;",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "8ab78124-2bb6-4544-94ba-8d3752b1e354",
                          "name": "Add simple product",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "Name: Swiss Movement Sports Watch, Category: Jewelry, Price: $500.00"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "62f98ef8-79b3-4fbf-ac22-533067deffe6",
                          "name": "Remove config + coupon",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": ""
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}?cartItemIds={{cart_items_to_remove}}COUPON_XXX",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ],
                              "query": [
                                {
                                  "key": "cartItemIds",
                                  "value": "{{cart_items_to_remove}}COUPON_XXX"
                                }
                              ]
                            },
                            "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "76bd9153-de90-414a-9f6a-e198286396b8",
                          "name": "Check discount/products",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Coupon code not set\", function () {",
                                  "    pm.expect(jsonData.coupon_code).to.eql(null);",
                                  "});",
                                  "",
                                  "pm.test(\"Still have the 544:Watch product in cart\", function () {",
                                  "    pm.expect(jsonData.items[0].product_id).to.be.eql(\"554\");",
                                  "});",
                                  "",
                                  ""
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{guest-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "{{cartId}}"
                              ]
                            },
                            "description": "Checks that there is no coupon applied and still have items in cart"
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "description": "Adds/Removes items & coupons in one call",
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "e9bdc7f7-dad0-42ed-b69c-28332b3502e8",
      "name": "/v2/carts/:id/items/:itemId",
      "item": [
        {
          "_postman_id": "bce43c0f-534e-46dd-adbe-1b69d6b8cf61",
          "name": "Product",
          "item": [
            {
              "_postman_id": "bd82aede-6d87-4c7e-bf35-cb144672fae3",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "5ea3910f-e660-4c27-afd2-4470343597db",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "97d3de6b-b26b-4ed4-8690-8a6d787204fa",
                      "name": "Simple",
                      "item": [
                        {
                          "_postman_id": "6ff46a66-beab-4929-9286-6b93fbfc52bb",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "b4fd8f0b-34a3-4507-9227-87a388700386",
                          "name": "Add Simple",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "fb759941-0e79-457a-9e30-57b498ce09ff",
                          "name": "Carts: qty 1",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                                  "} else {",
                                  "    tests[\"Not 200 code or no cart items returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "75abd3a7-9644-4fe8-9025-85d41dc1c4ff",
                          "name": "Update simple",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f01c23da-ed62-49fd-90a0-7bd7cd17a93b",
                          "name": "Carts: qty 3",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "8f088718-1e20-4c26-a512-1a875809a82f",
                          "name": "Alt update",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"cartItemId\": \"1111\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 4\n\t  }\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "Alternative way to updae the cart. This is the case where it is possible that the item id is in the body, even though it's not supposed to. The test makes sure the cartItemId in the body is replaced by the URI one"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "599e2b8b-4fb2-478b-84e2-6c31271c43a6",
                          "name": "Carts: qty 4",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 4 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(4);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    },
                    {
                      "_postman_id": "cb9eb8d0-c315-4fc6-b733-72afdcfaa166",
                      "name": "Configurable",
                      "item": [
                        {
                          "_postman_id": "5cc52134-5def-45dd-9343-4ee6729b695e",
                          "name": "/carts: customer",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                                  "} else {",
                                  "    tests[\"Cart ID is not returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});",
                                  "",
                                  "function isNumeric(n) {",
                                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                                  "}"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ]
                            },
                            "description": "Creates a customer cart"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "df6c13eb-fd60-48c7-801b-a9400068c006",
                          "name": "Add Configurable: Skirt",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_id_items}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_id_items}}"
                              ]
                            },
                            "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "cce4dc21-8df9-4e5e-8da7-48332e241ae1",
                          "name": "Carts: qty 1",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "var jsonData = pm.response.json();",
                                  "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                                  "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                                  "} else {",
                                  "    tests[\"Not 200 code or no cart items returned\"] = false;",
                                  "}",
                                  "",
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                                  "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "a3111c48-f721-4770-80e0-a2656e54dd3d",
                          "name": "Update configurable",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n    \"product\": {\n\t    \"product_id\": \"422\",\n\t    \"qty\": 3\n\t}\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "50dfc8b5-2504-4999-ba5f-600eb1021950",
                          "name": "Carts: qty 3",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                                  "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "f8a7c5c8-5ebb-444e-a3bd-95ecad5f8296",
                          "name": "Alt update",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test('Successfull call', function(){",
                                  "    pm.response.to.be.success;",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n\t\"cartItemId\": \"1111\",\n    \"product\": {\n\t    \"qty\": 4\n\t}\n}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts_me_items}}/{{cart_item_id}}",
                              "host": [
                                "{{domain}}{{endpoint_carts_me_items}}"
                              ],
                              "path": [
                                "{{cart_item_id}}"
                              ]
                            },
                            "description": "Alternative way to updae the cart. This is the case where it is possible that the item id is in the body, even though it's not supposed to. The test makes sure the cartItemId in the body is replaced by the URI one"
                          },
                          "response": []
                        },
                        {
                          "_postman_id": "3ae4dc6a-94dc-49dc-a7b7-49bdbd8fa75d",
                          "name": "Carts: qty 4",
                          "event": [
                            {
                              "listen": "test",
                              "script": {
                                "type": "text/javascript",
                                "exec": [
                                  "pm.test(\"Status code is 200\", function () {",
                                  "    pm.response.to.have.status(200);",
                                  "});",
                                  "",
                                  "pm.test(\"Qty is now updated to 4 for the previously inserted simple product\", function () {",
                                  "    var jsonData = pm.response.json();",
                                  "    pm.expect(jsonData.items[0].qty).to.eql(4);",
                                  "    pm.expect(jsonData.items[1].qty).to.eql(1);",
                                  "});"
                                ]
                              }
                            }
                          ],
                          "request": {
                            "auth": {
                              "type": "bearer",
                              "bearer": [
                                {
                                  "key": "token",
                                  "value": "{{customer-access-token}}",
                                  "type": "string"
                                }
                              ]
                            },
                            "method": "GET",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{}"
                            },
                            "url": {
                              "raw": "{{domain}}{{endpoint_carts}}/me",
                              "host": [
                                "{{domain}}{{endpoint_carts}}"
                              ],
                              "path": [
                                "me"
                              ]
                            }
                          },
                          "response": []
                        }
                      ],
                      "_postman_isSubFolder": true
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "ff50e957-4579-4c54-92cc-b6a29fa660ed",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "45dbdaba-43d9-4cd7-8875-12d767006dfd",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "9dd291da-923e-4f38-91f9-7d4e6cde3a06",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "8bc556ad-a0d7-47f4-b986-88b7b0961833",
                      "name": "Carts: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items.length).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "00651dbd-31c9-438e-85be-21154ba59dd0",
                      "name": "Delete by ID",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "240f16ea-a922-45cc-9603-ae17cb52396c",
                      "name": "Check cart for no items",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "0258b016-c85e-482b-a85c-0ba0af8aa8d4",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "49a8e5e9-991d-4e70-af82-0ded48d08fa1",
                  "name": "Update",
                  "item": [
                    {
                      "_postman_id": "be8b66e2-8a03-41d9-9143-a3f43817d42a",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "32b6d824-0634-441c-8d83-b9ac74bff999",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "618bde6e-5b89-48e2-8401-21ab85edd2a8",
                      "name": "Carts: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items[0].qty).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "f006fa98-5616-40ff-81bf-9eca91775e5c",
                      "name": "Update (no cartItem)",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 3\n\t  }\n}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        },
                        "description": "Physical Gift Card"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "9a2197b9-dd84-40e9-942e-b1336f2d8cf7",
                      "name": "Carts: qty 3",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is now updated to 3 for the previously inserted simple product\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items[0].qty).to.eql(3);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "0db49eec-a017-493e-9cae-e3f301eb2520",
                      "name": "Alt update",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"cartItemId\": \"1111\",\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 4\n\t  }\n}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        },
                        "description": "Alternative way to updae the cart. This is the case where it is possible that the item id is in the body, even though it's not supposed to. The test makes sure the cartItemId in the body is replaced by the URI one"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "a8ecc377-7394-473b-aa4a-b111d897e4f3",
                      "name": "Carts: qty 4",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Qty is now updated to 4 for the previously inserted simple product\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items[0].qty).to.eql(4);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "5be29b58-ff79-433f-bece-e275bde07401",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "22279c42-3317-4ee4-b5db-b6e8b6767a78",
                      "name": "/carts: Guest Cart",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "7c7362de-ab30-4b1f-9cd6-84c838d99821",
                      "name": "Add Simple",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "1321ba94-4f04-46b1-bb83-2fa4dd67076f",
                      "name": "Carts: qty 1",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.items.length > 0) {",
                              "    pm.environment.set(\"cart_item_id\", jsonData.items[0].item_id);",
                              "} else {",
                              "    tests[\"Not 200 code or no cart items returned\"] = false;",
                              "}",
                              "",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Initial quantity is 1 after adding simple product\", function () {",
                              "    pm.expect(jsonData.items.length).to.eql(1);",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "85d6622a-8f1b-4fcd-bb39-bb02827d5168",
                      "name": "Delete by ID",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/{{cart_item_id}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "{{cart_item_id}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "153b4eaa-1696-4510-bf75-f8188f51ae12",
                      "name": "Check cart for no items",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"No items in cart\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.items).to.be.empty;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "850fb0e6-347b-4aee-bc53-7d39d470f308",
          "name": "Coupon",
          "item": [
            {
              "_postman_id": "51bcd4d2-320e-44fe-b549-72da098db0ef",
              "name": "Customer",
              "item": [
                {
                  "_postman_id": "5abd6af2-cf9b-4d7f-bb3f-a5487c8fae88",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "cb2cd884-db6f-406a-bf01-7679e6bf3a3f",
                      "name": "/carts: customer",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a customer cart"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "1061222c-7809-4a23-af1b-c550403b4f09",
                      "name": "Add Configurable: Boots",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "d67d8e48-832e-4fc6-a7a8-04d98d6a7771",
                      "name": "Add 10 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"Register10\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is Group: General, subtotal: 200+"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "9f71c0ea-815c-4f07-81c8-7885d5e99a7f",
                      "name": "Check Register10 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Register10 code exists\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"Register10\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "2697bfeb-dceb-4699-9500-186850d9cb26",
                      "name": "items/COUPON_X",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/COUPON_XXX",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "COUPON_XXX"
                          ]
                        },
                        "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "f0f6dc9a-15dc-4400-b7c6-8174e8d930b4",
                      "name": "Check discount/products",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});",
                              "",
                              "pm.test(\"Still have configurable products in cart\", function () {",
                              "    pm.expect(jsonData.items.length).to.be.eql(2);",
                              "});",
                              "",
                              ""
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{customer-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Checks that there is no coupon applied and still have items in cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "7435d29d-5de5-46ef-840f-5cd94afd9f0e",
              "name": "Guest",
              "item": [
                {
                  "_postman_id": "01bd3e31-6c4d-4084-9e7c-33fde174aa96",
                  "name": "Delete",
                  "item": [
                    {
                      "_postman_id": "51bb06fd-b100-4289-9592-5aee6f035abd",
                      "name": "/carts: guest",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                              "    pm.environment.set(\"cartId\", jsonData.cartId);",
                              "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                              "} else {",
                              "    tests[\"Cart ID is not returned\"] = false;",
                              "}",
                              "",
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});",
                              "",
                              "function isNumeric(n) {",
                              "  return !isNaN(parseFloat(n)) && isFinite(n);",
                              "}"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ]
                        },
                        "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "3735328f-d257-4854-a89f-0e25ef66f259",
                      "name": "Add Configurable: Skirt",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n\t    \"product\": {\n\t\t    \"product_id\": \"422\",\n\t\t    \"qty\": 1,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"17\",\n\t\t\t      \"180\": \"76\"\n\t\t\t    }\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "ddda941e-b955-42a7-9ef5-08ac3af8185a",
                      "name": "Add 15 flat off coupon",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "[\n  {\n    \t\"coupon\": {\n\t\t    \"couponCode\":\"evening15\"\n\t\t}\n  }\n]"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ]
                        },
                        "description": "Condition for coupon is:\nGroup: Not-Logged-In, General, VIP, Private Sales Member; \nCategories: Dresses & Skirts, Dresses;"
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "75ff9c5a-9f64-472b-83c5-9d18c32d96b1",
                      "name": "Code evening15 exists",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"evening15 code exists\", function () {",
                              "    pm.expect(jsonData.coupon_code).to.eql(\"evening15\");",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "406d375c-52e5-417d-a6b6-ee967727f65a",
                      "name": "items/COUPON_X",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test('Successfull call', function(){",
                              "    pm.response.to.be.success;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts_id_items}}/COUPON_XXX",
                          "host": [
                            "{{domain}}{{endpoint_carts_id_items}}"
                          ],
                          "path": [
                            "COUPON_XXX"
                          ]
                        },
                        "description": "Removes configurable product + the coupon set. Leaves the Simple product intact."
                      },
                      "response": []
                    },
                    {
                      "_postman_id": "38daa940-4da3-4943-861a-1dfeab39ce35",
                      "name": "Check discount/products",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "var jsonData = pm.response.json();",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Coupon code not set\", function () {",
                              "    pm.expect(jsonData.coupon_code).to.eql(null);",
                              "});",
                              "",
                              "pm.test(\"Still have configurable item in cart\", function () {",
                              "    pm.expect(jsonData.items.length).to.be.eql(2);",
                              "});",
                              "",
                              ""
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{guest-access-token}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{}"
                        },
                        "url": {
                          "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                          "host": [
                            "{{domain}}{{endpoint_carts}}"
                          ],
                          "path": [
                            "{{cartId}}"
                          ]
                        },
                        "description": "Checks that there is no coupon applied and still have items in cart"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "5991a16d-9bf8-4be3-98bd-58fcef6abb23",
      "name": "/v2/carts/:id/checkoutUrl",
      "item": [
        {
          "_postman_id": "d2b3322a-ea41-41c6-b7ea-5a78b7b026db",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "f1144293-8a7d-47bd-980e-d333e16fef73",
              "name": "Create customer cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a customer cart"
              },
              "response": []
            },
            {
              "_postman_id": "c02ab66b-28c4-4117-b391-7acca0a4cd80",
              "name": "Add simple product to cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_items}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_items}}"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "a1099820-5417-43f9-8321-dc5a18cd87c4",
              "name": "checkoutURL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Checkout URL is returned\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.jsonBody('url');",
                      "    pm.response.to.have.jsonBody('expires_in', 30);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_checkoutUrl}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_checkoutUrl}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "433b3b4f-7b95-4963-9bb3-e2da130b6383",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "b7228989-876e-4b8a-82d2-6a146729302c",
              "name": "Create guest cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                      "    pm.environment.set(\"cartId\", jsonData.cartId);",
                      "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                      "} else {",
                      "    tests[\"Cart ID is not returned\"] = false;",
                      "}",
                      "",
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});",
                      "",
                      "function isNumeric(n) {",
                      "  return !isNaN(parseFloat(n)) && isFinite(n);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts}}",
                  "host": [
                    "{{domain}}{{endpoint_carts}}"
                  ]
                },
                "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
              },
              "response": []
            },
            {
              "_postman_id": "0d11471e-1bd0-454f-b4f7-03b10fbb796e",
              "name": "Add simple item to cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Successfull call', function(){",
                      "    pm.response.to.be.success;",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_items}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_items}}"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "199cab2b-8af3-4636-a16c-b9d268af0806",
              "name": "checkoutURL",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Checkout URL is returned\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.jsonBody('url');",
                      "    pm.response.to.have.jsonBody('expires_in', 30);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_carts_id_checkoutUrl}}",
                  "host": [
                    "{{domain}}{{endpoint_carts_id_checkoutUrl}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "ec594ce0-0f16-4079-87a5-233d565c396e",
      "name": "/v2/carts/:id/customer",
      "item": [
        {
          "_postman_id": "f4718f6c-b6cb-49d3-8734-39799bd41ca4",
          "name": "Create customer cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                  "} else {",
                  "    tests[\"Cart ID is not returned\"] = false;",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "function isNumeric(n) {",
                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ]
            },
            "description": "Creates a customer cart"
          },
          "response": []
        },
        {
          "_postman_id": "8407bb9a-c9b0-45ca-baa0-267a4b0f5228",
          "name": "Customer: add simple",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"554\",\n\t    \"qty\": 1\n\t  }\n  }\n]"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts_id_items}}",
              "host": [
                "{{domain}}{{endpoint_carts_id_items}}"
              ]
            },
            "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
          },
          "response": []
        },
        {
          "_postman_id": "4b55fc60-0243-4933-88ad-904da843cc6d",
          "name": "Customer: cart qty 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Initial quantity is 1 after adding a simple product\", function () {",
                  "    pm.expect(jsonData.items.length).to.eql(1);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "{{cartId}}"
              ]
            },
            "description": "Creates a customer cart"
          },
          "response": []
        },
        {
          "_postman_id": "a37f8590-0bf9-4738-bdd3-a1ef13a6e1d6",
          "name": "/carts: Guest Cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                  "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                  "} else {",
                  "    tests[\"Cart ID is not returned\"] = false;",
                  "}",
                  "",
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});",
                  "",
                  "function isNumeric(n) {",
                  "  return !isNaN(parseFloat(n)) && isFinite(n);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ]
            },
            "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
          },
          "response": []
        },
        {
          "_postman_id": "fdf6d926-ee65-4478-86cf-ea40fe8ce7de",
          "name": "Guest: add downloadable",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Successfull call', function(){",
                  "    pm.response.to.be.success;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"563\",\n\t    \"qty\": 1,\n\t    \"links\": [\n\t      \"18\"\n\t    ]\n\t }\n  }\n]"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts_id_items}}",
              "host": [
                "{{domain}}{{endpoint_carts_id_items}}"
              ]
            },
            "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
          },
          "response": []
        },
        {
          "_postman_id": "b5ed1bf4-87ea-4a59-be26-c0031aff6712",
          "name": "Guest: cart qty 1",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Initial quantity is 1 after adding a downlodable product\", function () {",
                  "    pm.expect(jsonData.items.length).to.eql(1);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "{{cartId}}"
              ]
            },
            "description": "calls a customer cart as guest"
          },
          "response": []
        },
        {
          "_postman_id": "7259c9b5-64a1-4b53-8019-ab36143420b9",
          "name": "Merge carts",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (responseCode.code === 200 && jsonData.cartId) {",
                  "    pm.environment.set(\"cartId\", jsonData.cartId);",
                  "}",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Cart ID is returned\", function () {",
                  "    pm.expect(jsonData.cartId).to.not.be.empty;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts_id_customer}}",
              "host": [
                "{{domain}}{{endpoint_carts_id_customer}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "33e5e859-d090-463a-baaa-d7b2dc158821",
          "name": "Customer: cart qty 2",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Carts merged, 2 items in cart\", function () {",
                  "    pm.expect(jsonData.items.length).to.eql(2);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "{{cartId}}"
              ]
            },
            "description": "Creates a customer cart"
          },
          "response": []
        },
        {
          "_postman_id": "1e8038d0-a255-4701-a59d-1714fe39d790",
          "name": "Merge: call ME endpoint",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Cannot use ME endpoint here\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{domain}}{{endpoint_carts}}/me/customer",
              "host": [
                "{{domain}}{{endpoint_carts}}"
              ],
              "path": [
                "me",
                "customer"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "6f278903-1036-46c0-9375-ddc576bb2899",
      "name": "/v2/customers/me",
      "item": [
        {
          "_postman_id": "179115a9-5d1a-441d-9602-96da4b6a54a5",
          "name": "Customer: me",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eda8e7c9-de5e-4f59-8e45-4c7798df6698",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Customer ID is returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.customer_id).to.not.be.empty;",
                  "});",
                  ""
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.unset(\"customer_id\");"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{customer-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{domain}}{{endpoint_customers_me}}",
              "host": [
                "{{domain}}{{endpoint_customers_me}}"
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "36200f93-0123-4c01-8a56-39492bf2412e",
          "name": "Guest cannot call this endpoint",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d71bccf3-b3d3-480f-9000-d0d6294ea575",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Guest cannot access, unauthorized\", function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{guest-access-token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{domain}}{{endpoint_customers_me}}",
              "host": [
                "{{domain}}{{endpoint_customers_me}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "c5dd8cb5-16f4-4305-bf57-4b10044064d8",
      "name": "/v2/customers/:id/addresses",
      "item": [
        {
          "_postman_id": "780dd9e7-a4fa-42c1-abe3-06df20aa2203",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "70550e18-2abf-4c06-8188-20993d90b5e8",
              "name": "Get address",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "575714b8-e63a-402c-92c0-c45fe722225c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.variables.set(\"customer-id\", \"1\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "fe5dc968-baee-4c87-8863-3384aa68dd7e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Guest cannot access customer endpoint by an existing ID of 1\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});",
                      "pm.variables.unset(\"customer-id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "body": {},
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "bc54fc76-a969-4030-a0b1-d94dbdbd0995",
              "name": "Create address",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "575714b8-e63a-402c-92c0-c45fe722225c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.variables.set(\"customer-id\", \"1\");"
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "fe5dc968-baee-4c87-8863-3384aa68dd7e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Guest cannot access customer endpoint by an existing ID of 1\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});",
                      "pm.variables.unset(\"customer-id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "8ab36e56-12c0-49ef-b461-4193b96585c4",
              "name": "Delete address",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "21e83ae0-714e-47ef-aea7-805fe1801de4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Guest cannot access customer endpoint by an existing ID of 1\", function () {",
                      "    pm.response.to.have.status(403);",
                      "});",
                      "pm.variables.unset(\"customer-id\");",
                      "pm.variables.unset(\"address-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "bb50f680-c6e9-49d0-b73c-19dd063ea186",
                    "type": "text/javascript",
                    "exec": [
                      "pm.variables.set(\"customer-id\", \"1\");",
                      "pm.variables.set(\"address-id\", \"1\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Making sure the guest cannot access this endpoint",
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "38db7ac0-ed12-49fb-8245-b830173108db",
          "name": "Customer 2 (C2)",
          "item": [
            {
              "_postman_id": "c95b33cd-c4fa-42b7-8e09-e0668e0e6aa1",
              "name": "Get C1 ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "6dba080f-3603-4637-b150-4401c67655dd",
              "name": "Create address via C1",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                    "type": "text/javascript",
                    "exec": [
                      "// preparation for delete / update address endpoint",
                      "var jsonData = pm.response.json();",
                      "if (jsonData.addressId) {",
                      "    pm.environment.set(\"address-id\", jsonData.addressId);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "48ba439c-ae5f-4701-878f-2c6c11333727",
              "name": "Create address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2d0771bb-36f1-4096-a9d8-0f213a404ad3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "303618a7-dad8-46b2-a506-414753e1ffe8",
              "name": "Get address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e8c83952-bfd1-4c86-9518-1fb825553b39",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "cdf5f454-4ee4-4d44-be01-fe6944a0037c",
              "name": "Update address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5d5fe4a9-8d64-4c86-abb5-d70556361c07",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "034019cd-7070-499f-b523-c16e67b7bf67",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));",
                      "setTimeout(function(){}, 2000); //delay 2 seconds so that created_at and updated_at are different"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"EE\",\n    \"region\": \"Harjumaa\",\n    \"postcode\": \"13916\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "52972320-9c55-4507-aecb-d0b380991a32",
              "name": "Delete address via C2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6e95581e-0177-4dbd-b8f6-a28e4e6d88f7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Accessed resource cannot be found\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token-2}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "3f42ec78-419d-412f-8deb-9bf1c872e4f4",
              "name": "cleanup",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "146b2f14-10e9-43a5-972e-02e5442395e2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");",
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "6c0f1073-a965-4cd7-a83a-df8b613ab7d2",
          "name": "Create",
          "item": [
            {
              "_postman_id": "d1ba5c49-606c-4384-bf52-c79cd80f25ba",
              "name": "Errors",
              "item": [
                {
                  "_postman_id": "3af78f8f-cd16-4397-b9a7-ec1f7686118b",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e232847-89ab-4d2e-94b0-11642a2b365b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "747d7180-fc50-4a98-8aed-ba116cb3b942",
                  "name": "Required errors",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "66930191-8830-4aae-9aa8-5900658a79bf",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "/**",
                          " * Traverses all default errors and checks that they exist as json objects",
                          " */",
                          "pm.test(\"All default errors appear correctly\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    const list = ['firstname', 'lastname', 'street', 'country_id', 'city', 'postcode', 'telephone']",
                          "    pm.expect(jsonData.messages.error.length).to.be.gte(7);",
                          "    list.forEach((path) => {",
                          "        let result = jsonData.messages.error.filter((item) => item.path === path);",
                          "        pm.expect(result.length).to.eq(1);",
                          "        if (result.length === 0) {",
                          "            console.log('This path is not available in this mage instance: ' + path)",
                          "        }",
                          "    })",
                          "});",
                          "",
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "b9c11b79-da37-4484-a07f-a9862e10f2f6",
                  "name": "Region doesn't exist",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0a78e10c-f4e1-4db8-9cd8-45413846399d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('State/Province does not exist.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"test1.firstname\",\n    \"lastname\": \"test1.lastname\",\n    \"city\": \"test1.city\",\n    \"country_id\": \"US\",\n    \"region\": \"bla\",\n    \"postcode\": \"test1.postcode\",\n    \"telephone\": \"test1.telephone\",\n    \"street\": [\"test1.street\"]\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "f4e28cb4-0122-415e-ab8d-9d4f3d796fcb",
                  "name": "Region is not a string",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "71d16f78-8d2b-42b3-953a-735f1b5f1c50",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"US\",\n        \"region\": 1,\n        \"postcode\": \"test1.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "8f23365d-7ad5-4208-b3ca-6a2ffd25dca9",
                  "name": "No region provided",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "86a42c19-c1c8-4d24-a87e-befae29dec4b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"State/Province error is thrown\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('\"State/Province\" is required.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"\",\n        \"postcode\": \"test1.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n  }"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "d3cb263d-0dff-4d9b-a3df-938269f59d28",
                  "name": "No region needed for Italy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "27c387ae-33eb-46d6-a04d-18252e260a26",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Only postcode error is thrown and no region error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('postcode');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"IT\",\n        \"region\": \"\",\n        \"postcode\": \"\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n  }"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "73fc467f-f369-4d5b-b1db-4a753e1dafaf",
                  "name": "Country code too long",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a0e30c-2a27-49f6-8be5-26d47dbea85d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"United States\",\n        \"region\": \"test.region\",\n        \"postcode\": \"test.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "67fd2ea4-8c55-40f2-9a42-ed1cfec83313",
                  "name": "Country code too short",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2456a7c-69e5-438c-9873-320242742b9f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n        \"firstname\": \"test1.firstname\",\n        \"lastname\": \"test1.lastname\",\n        \"city\": \"test1.city\",\n        \"country_id\": \"U\",\n        \"region\": \"test.region\",\n        \"postcode\": \"test.postcode\",\n        \"telephone\": \"test1.telephone\",\n        \"street\": [\"test1.street\"]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b570ddae-af2d-49be-8573-6490d642017f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f3b6d2d4-b0b3-4b7c-ab0c-aa16d0f7ce2f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "a67a3e55-428c-47b8-8cf6-bc87b250ff9e",
              "name": "Defaults",
              "item": [
                {
                  "_postman_id": "b90cd945-0203-4f32-a1e8-4357a3d1b876",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "be781abf-9528-487b-9553-3cda4fe35e01",
                  "name": "Create address (get ID)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                        "type": "text/javascript",
                        "exec": [
                          "// preparation for delete / update address endpoint",
                          "var jsonData = pm.response.json();",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ],\n    \"is_default_billing\": 0,\n    \"is_default_shipping\": 1\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "a2c97468-a56c-415d-b4fe-5ca5dbbe27d0",
                  "name": "Check default status",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3e77a69a-d733-4443-93a7-c93b0108514b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Correct default status is returned\", function () {",
                          "    var lastAddress = pm.response.json();",
                          "    pm.expect(lastAddress.is_default_billing).to.eq(0);",
                          "    pm.expect(lastAddress.is_default_shipping).to.eq(1);",
                          "});",
                          "",
                          "pm.environment.unset(\"seed\");",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "18d40199-72d9-4cc8-91dc-730a1bf08992",
              "name": "Get customer ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "4448e334-bc88-4a26-a741-95db6927e70d",
              "name": "Create address (get ID)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                    "type": "text/javascript",
                    "exec": [
                      "// preparation for delete / update address endpoint",
                      "var jsonData = pm.response.json();",
                      "if (jsonData.addressId) {",
                      "    pm.environment.set(\"address-id\", jsonData.addressId);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "a89ae1b2-65a5-4956-8ccd-59cf2caa5ced",
              "name": "Check last address entry",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50a057c1-3a2b-4288-9af5-192ce60da704",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.customer_id).to.eq(pm.environment.get(\"customer-id\"));",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.updated_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"US\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Arizona\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"85000\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "1b55ae68-7080-4cc4-9a8c-6a601134c04f",
              "name": "Check addresses by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a4db5316-86f5-4c77-ae9d-2a8f07740f5f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    var lastAddress = pm.response.json();",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.updated_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"US\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Arizona\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"85000\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "d067d473-5ce8-4c8b-aaf7-260428c855cd",
              "name": "cleanup",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40b75786-3514-46b9-98c4-6d9774f2d4ab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "id": "4b7a8d7f-9bbd-4c6f-878a-f71d38e1a982",
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  ""
                ],
                "id": "cee13ced-d2e8-4416-b506-3ffd165aac32",
                "type": "text/javascript"
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "1f0ab5a4-9bfb-410a-bd8a-5c4246ee2dc6",
          "name": "Update",
          "item": [
            {
              "_postman_id": "c4a7fa84-68de-4359-b9b2-8fcc1e4d0b64",
              "name": "Errors",
              "item": [
                {
                  "_postman_id": "e4ac3bc7-6f36-4c01-b1d5-b5929bb51649",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6e232847-89ab-4d2e-94b0-11642a2b365b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "6e8aefd2-6ec2-4028-9341-73576b519f96",
                  "name": "Create address (get ID)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                        "type": "text/javascript",
                        "exec": [
                          "// preparation for delete / update address endpoint",
                          "var jsonData = pm.response.json();",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "c118ae1c-d8bf-4253-87ae-583c15bdcefd",
                  "name": "Empty body",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "244d963e-3945-44c9-9b7a-066d0d6f8c4e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Empty body, status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "4155c142-5968-4d50-b7fe-7e483e9a25ac",
                  "name": "Region doesn't exist",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0a78e10c-f4e1-4db8-9cd8-45413846399d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('State/Province does not exist.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"US\",\n    \"region\": \"bla\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "31757c80-7a0e-40b4-959a-297a18a39167",
                  "name": "Region is not a string",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "71d16f78-8d2b-42b3-953a-735f1b5f1c50",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Correct errors are returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"US\",\n    \"region\": 1\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "dcd4b716-af40-4054-b35a-7854668847ec",
                  "name": "No region provided",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "86a42c19-c1c8-4d24-a87e-befae29dec4b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"State/Province error is thrown\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('region');",
                          "    pm.expect(jsonData.messages.error[0].messages[0]).to.eq('\"State/Province\" is required.');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"US\",\n    \"region\": \"\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "aefa572c-e7f3-4c2b-898d-40fae70c6a5c",
                  "name": "No region needed for Italy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "27c387ae-33eb-46d6-a04d-18252e260a26",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"Only postcode error is thrown and no region error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('postcode');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"IT\",\n    \"region\": \"\",\n    \"postcode\": \"\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "26c0c611-4e6a-4ba5-8b2f-66827723cab9",
                  "name": "Country code too long",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "11a0e30c-2a27-49f6-8be5-26d47dbea85d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"United States\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "68113350-af26-4a96-9f6f-d093278932b4",
                  "name": "Country code too short",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c2456a7c-69e5-438c-9873-320242742b9f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status 400 returned\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.test(\"One error with country_id path returned\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].path).to.eq('country_id');",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"country_id\": \"U\"\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "d0549aaa-22bb-4915-9c84-147875e75077",
                  "name": "cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5be76750-28f8-414d-961c-8de6c1185296",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"seed\");",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}?ids={{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "query": [
                        {
                          "key": "ids",
                          "value": "{{address-id}}"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "b570ddae-af2d-49be-8573-6490d642017f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "f3b6d2d4-b0b3-4b7c-ab0c-aa16d0f7ce2f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "4410ff30-4e1a-47f8-9252-a99904d6a43d",
              "name": "Defaults",
              "item": [
                {
                  "_postman_id": "aa742827-17b6-4d1a-9123-dbe365d1803e",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "ef1242ab-da78-49e7-bd2e-87e2c43c824a",
                  "name": "Create address (get ID)",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                        "type": "text/javascript",
                        "exec": [
                          "// preparation for delete / update address endpoint",
                          "var jsonData = pm.response.json();",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ],\n    \"is_default_billing\": 1,\n    \"is_default_shipping\": 1\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "e21f2a36-baf1-4b42-bfe0-b0011b4c20d6",
                  "name": "Attempt set defaults to 0",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2102d275-5464-4b29-a4e1-fe22a1d2e578",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "7c76b266-d40a-4922-bb90-adfbc01176dd",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"country_id\": \"US\",\n\t\"region\": \"AZ\",\n    \"is_default_billing\": 0,\n    \"is_default_shipping\": 0\n}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "ad658449-a637-4bc5-b574-cc5a5ec0693f",
                  "name": "Check error + clean",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f690b4c0-cbf4-408e-8c30-9392cd8054f9",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Cannot delete a default address\", function () {",
                          "    pm.response.to.have.status(400);",
                          "});",
                          "",
                          "pm.environment.unset(\"seed\");",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "Test to make sure that we cannot change defaults by passing 0's at the end we try to delete, a successful error on delete means that it is stil default and we were unsuccessful.",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "3f0b46c5-f723-455e-b31f-5d9a2bfe26f2",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "c8a791ec-f3df-4373-927e-ff890b51d270",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "d169c1ec-63ed-47a8-ae90-53ec92ac85ef",
              "name": "Get customer ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5cb95e31-6dc3-45e7-9b0c-a0b309745f49",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.response.to.have.status(200);",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "1afae906-ae64-462c-8086-770e8ab5e9a7",
              "name": "Create address (get ID)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b831f5a-28f5-4714-9636-ced2cc33ff65",
                    "type": "text/javascript",
                    "exec": [
                      "// preparation for delete / update address endpoint",
                      "var jsonData = pm.response.json();",
                      "if (jsonData.addressId) {",
                      "    pm.environment.set(\"address-id\", jsonData.addressId);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"fax\": \"{{seed}}.fax\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "5d4c54a0-72fe-4ebc-8d2d-1c9946f48555",
              "name": "Check address data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b7a49c3a-ca8e-4bef-a3b8-69a9f109d2f0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.customer_id).to.eq(pm.environment.get(\"customer-id\"));",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.created_at).to.eq(lastAddress.updated_at);",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"US\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Arizona\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"85000\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.fax).to.eq(pm.environment.get(\"seed\") + \".fax\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "    pm.expect(lastAddress.is_default_billing).to.eq(0);",
                      "    pm.expect(lastAddress.is_default_shipping).to.eq(0);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "f516482f-bec7-4720-9833-8bcd2e850bfe",
              "name": "Update address data",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2102d275-5464-4b29-a4e1-fe22a1d2e578",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "034019cd-7070-499f-b523-c16e67b7bf67",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));",
                      "setTimeout(function(){}, 2000); //delay 2 seconds so that created_at and updated_at are different"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"EE\",\n    \"region\": \"Harjumaa\",\n    \"postcode\": \"13916\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"fax\": \"{{seed}}.fax\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ]\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "0d2bdff1-c1ac-48e7-8b5b-26782f9f58af",
              "name": "Check updated address",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6c29ba64-ea52-460b-8482-c640365195ec",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.customer_id).to.eq(pm.environment.get(\"customer-id\"));",
                      "    pm.expect(lastAddress.created_at).to.not.be.empty;",
                      "    pm.expect(lastAddress.created_at).to.not.eq(lastAddress.updated_at);",
                      "    pm.expect(lastAddress.firstname).to.eq(pm.environment.get(\"seed\") + \".first\");",
                      "    pm.expect(lastAddress.lastname).to.eq(pm.environment.get(\"seed\") + \".last\");",
                      "    pm.expect(lastAddress.is_active).to.eq('1');",
                      "    pm.expect(lastAddress.company).to.eq(pm.environment.get(\"seed\") + \".company\");",
                      "    pm.expect(lastAddress.city).to.eq(pm.environment.get(\"seed\") + \".city\");",
                      "    pm.expect(lastAddress.country_id).to.eq(\"EE\");",
                      "    pm.expect(lastAddress.region).to.eq(\"Harjumaa\");",
                      "    pm.expect(lastAddress.postcode).to.eq(\"13916\");",
                      "    pm.expect(lastAddress.street[0]).to.eq(pm.environment.get(\"seed\") + \".street1\");",
                      "    pm.expect(lastAddress.street[1]).to.eq(pm.environment.get(\"seed\") + \".street2\");",
                      "    pm.expect(lastAddress.telephone).to.eq(pm.environment.get(\"seed\") + \".phone\");",
                      "    pm.expect(lastAddress.fax).to.eq(pm.environment.get(\"seed\") + \".fax\");",
                      "    pm.expect(lastAddress.vat_id).to.eq(pm.environment.get(\"seed\") + \".vat_id\");",
                      "    pm.expect(lastAddress.is_default_billing).to.eq(0);",
                      "    pm.expect(lastAddress.is_default_shipping).to.eq(0);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e0fd3a4d-b403-41a2-a325-03cc04ccffb6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "0daaeb28-4166-4d20-be5e-cdb4a67642be",
              "name": "Set default",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2102d275-5464-4b29-a4e1-fe22a1d2e578",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7c76b266-d40a-4922-bb90-adfbc01176dd",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\t\"country_id\": \"US\",\n\t\"region\": \"AZ\",\n    \"is_default_billing\": 1,\n    \"is_default_shipping\": 0\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "path": [
                    "{{address-id}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "1628e761-eb57-4c37-b30f-0e45ee195bdf",
              "name": "Check default + clean",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "16690fc5-fb7b-4f22-ab8f-3c6d66034ea3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Successfully loaded address data\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Customer address data is returned\", function () {",
                      "    const jsonData = pm.response.json();",
                      "    const lastAddress = jsonData.pop();",
                      "    pm.expect(lastAddress.is_default_billing).to.eq(1);",
                      "    pm.expect(lastAddress.is_default_shipping).to.eq(0);",
                      "});",
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "e0fd3a4d-b403-41a2-a325-03cc04ccffb6",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "4b7a8d7f-9bbd-4c6f-878a-f71d38e1a982",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "cee13ced-d2e8-4416-b506-3ffd165aac32",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "1b234506-6f47-4bf1-8fc0-ab815e877c39",
          "name": "Delete",
          "item": [
            {
              "_postman_id": "62e842e0-d2fb-47ca-972d-ab00717a8898",
              "name": "Single",
              "item": [
                {
                  "_postman_id": "550635ad-62af-4909-888a-d04efc814f7f",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "17e42647-1a30-4fbc-87db-19215e721a8c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "5adc5fff-29b9-46a4-a53d-ffaa2f2963ff",
                  "name": "Create address",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "49048781-04cb-44ee-8271-225312bec2a1",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully created address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "var jsonData = pm.response.json();",
                          "pm.test(\"Customer address ID is returned\", function () {",
                          "    pm.expect(jsonData.addressId).to.not.be.empty;",
                          "});",
                          "",
                          "// preparation for delete address endpoint",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\t\"prefix\": \"Test1.prefix\",\n        \"firstname\": \"Test1.first\",\n        \"middlename\": \"Test1.mid\",\n        \"lastname\": \"Test1.last\",\n        \"suffix\": \"Test1.suffix\",\n        \"company\": \"Test1.comapny\",\n        \"city\": \"Test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"Arizona\",\n        \"postcode\": \"85000\",\n        \"telephone\": \"618-322-0000\",\n        \"vat_id\": \"Test1.vat_id\",\n        \"street\": [\n            \"Test1.street1\",\n            \"Test1.street2\"\n        ]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "682a9146-9ffc-4434-a4e7-46a0447a48e3",
                  "name": "Delete address by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e2d949cc-8606-477b-98b0-422bb879951e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully deleted address\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "6990b1fd-ea08-4810-82b4-047c4eddeaca",
                  "name": "No address exists + cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "75c2627f-a51e-40cd-b1cc-4e290ec2107f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Resource should not exist\", function () {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Address not found error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].message).to.eq('Resource not found.');",
                          "});",
                          "",
                          "pm.environment.unset(\"address-id\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "3271e469-71fe-45cf-aefe-464c0a6bf2cb",
              "name": "Multiple",
              "item": [
                {
                  "_postman_id": "b6df7021-9fa9-4c8b-811c-12644dc3d8e2",
                  "name": "Get customer ID via ME",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "815fc4f6-d2ae-400f-8edb-e72ad3cf1e0b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded customer data via ME endpoint\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.response.to.have.status(200);",
                          "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.environment.unset(\"customer_id\");"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_me}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_me}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "356e82aa-85b0-4d94-9bd3-37d2777f251d",
                  "name": "Create first address",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d05474ac-0db9-4084-968e-085b65fd518b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully created address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "var jsonData = pm.response.json();",
                          "pm.test(\"Customer address ID is returned\", function () {",
                          "    pm.expect(jsonData.addressId).to.not.be.empty;",
                          "});",
                          "",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\t\"prefix\": \"Test1.prefix\",\n        \"firstname\": \"Test1.first\",\n        \"middlename\": \"Test1.mid\",\n        \"lastname\": \"Test1.last\",\n        \"suffix\": \"Test1.suffix\",\n        \"company\": \"Test1.comapny\",\n        \"city\": \"Test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"Arizona\",\n        \"postcode\": \"85000\",\n        \"telephone\": \"618-322-0000\",\n        \"vat_id\": \"Test1.vat_id\",\n        \"street\": [\n            \"Test1.street1\",\n            \"Test1.street2\"\n        ]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "f5be3a4c-70f3-427d-abc4-ee60ad062125",
                  "name": "Create second address",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1d8f7c79-4735-4291-997a-68c6afccccc1",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully created address data\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "var jsonData = pm.response.json();",
                          "pm.test(\"Customer address ID is returned\", function () {",
                          "    pm.expect(jsonData.addressId).to.not.be.empty;",
                          "});",
                          "",
                          "if (jsonData.addressId) {",
                          "    pm.environment.set(\"address-id-2\", jsonData.addressId);",
                          "}"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\t\"prefix\": \"Test1.prefix\",\n        \"firstname\": \"Test1.first\",\n        \"middlename\": \"Test1.mid\",\n        \"lastname\": \"Test1.last\",\n        \"suffix\": \"Test1.suffix\",\n        \"company\": \"Test1.comapny\",\n        \"city\": \"Test1.city\",\n        \"country_id\": \"US\",\n        \"region\": \"Arizona\",\n        \"postcode\": \"85000\",\n        \"telephone\": \"618-322-0000\",\n        \"vat_id\": \"Test1.vat_id\",\n        \"street\": [\n            \"Test1.street1\",\n            \"Test1.street2\"\n        ]\n\t}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "b600aec3-8c02-470c-852d-ec3e7c38cebb",
                  "name": "Delete addresses by ID",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "54cb59ee-a543-419a-a837-c4ef22ace3f2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully deleted addresses\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}?ids={{address-id}},{{address-id-2}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "query": [
                        {
                          "key": "ids",
                          "value": "{{address-id}},{{address-id-2}}"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "67e70de3-2335-4840-a5d3-2edfa223df77",
                  "name": "No address 1 + cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6cb1e62f-0230-4278-a1fc-9f609b5fb352",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Resource should not exist\", function () {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Address not found error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].message).to.eq('Resource not found.');",
                          "});",
                          "",
                          "pm.environment.unset(\"address-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "_postman_id": "8450f936-f580-421d-a240-e5688d3e10c5",
                  "name": "No address 2 + cleanup",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6387521e-485f-4e06-8aaa-d4d0f5fceea7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Resource should not exist\", function () {",
                          "    pm.response.to.have.status(404);",
                          "});",
                          "",
                          "pm.test(\"Address not found error\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(jsonData.messages.error.length).to.eq(1);",
                          "    pm.expect(jsonData.messages.error[0].message).to.eq('Resource not found.');",
                          "});",
                          "",
                          "pm.environment.unset(\"address-id-2\");",
                          "pm.environment.unset(\"customer-id\");"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                        "type": "text/javascript",
                        "exec": [
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_customers_id_addresses}}/{{address-id-2}}",
                      "host": [
                        "{{domain}}{{endpoint_customers_id_addresses}}"
                      ],
                      "path": [
                        "{{address-id-2}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "af1d48d6-7c55-4513-b598-8448f2baed5d",
          "name": "Cleaning routine",
          "item": [
            {
              "_postman_id": "d6efe309-e9f0-4203-bcd6-df17df378244",
              "name": "Get customer ID via ME",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e4e2fb85-871f-448e-bebf-ea7689ae550a",
                    "type": "text/javascript",
                    "exec": [
                      "if (responseCode.code === 200) {",
                      "    var jsonData = pm.response.json();",
                      "    pm.environment.set(\"customer-id\", jsonData.customer_id);",
                      "}"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f4a1b51e-3eea-4ae6-9dfd-f4c5faf33af3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"customer_id\");"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_me}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_me}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "1c4fbbbb-0ed4-45ca-bbb7-4fc3e258c2b2",
              "name": "Get all addresses",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11498c79-a3ac-49a0-8836-970d8cb7d003",
                    "type": "text/javascript",
                    "exec": [
                      "const jsonData = pm.response.json();",
                      "const list = [];",
                      "jsonData.forEach((address) => {",
                      "    list.push(address.entity_id);",
                      "})",
                      "",
                      "pm.environment.set(\"cleaning-list\", list.join(','));"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "d17542b0-c10e-444b-b35c-ef85e6c5bf55",
              "name": "Create default address",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "000987a0-8d9f-4c84-8691-9dc12832cc96",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "666aa4c8-cc6b-47e8-bbb2-f54f7cd6dd6c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.set(\"seed\", \"address-\" + Math.floor(Math.random() * Math.floor(100)));"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstname\": \"{{seed}}.first\",\n    \"middlename\": \"{{seed}}.mid\",\n    \"lastname\": \"{{seed}}.last\",\n    \"company\": \"{{seed}}.company\",\n    \"city\": \"{{seed}}.city\",\n    \"country_id\": \"US\",\n    \"region\": \"Arizona\",\n    \"postcode\": \"85000\",\n    \"telephone\": \"{{seed}}.phone\",\n    \"vat_id\": \"{{seed}}.vat_id\",\n    \"street\": [\n        \"{{seed}}.street1\",\n        \"{{seed}}.street2\"\n    ],\n    \"is_default_billing\": 1,\n    \"is_default_shipping\": 1\n}"
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "69e1459d-10c8-405d-b90e-3746d51d765c",
              "name": "Delete all addresses",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2df5b28c-4fc2-41ef-9b51-a00534651f09",
                    "type": "text/javascript",
                    "exec": [
                      "pm.environment.unset(\"cleaning-list\");",
                      "pm.environment.unset(\"seed\");",
                      "pm.environment.unset(\"address-id\");",
                      "pm.environment.unset(\"customer-id\");"
                    ]
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "16d54f96-0512-4548-814a-9beef69d72ad",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_customers_id_addresses}}?ids={{cleaning-list}}",
                  "host": [
                    "{{domain}}{{endpoint_customers_id_addresses}}"
                  ],
                  "query": [
                    {
                      "key": "ids",
                      "value": "{{cleaning-list}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Removes all addresses and leaves one as default",
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "4498feb9-199d-4da9-ab07-2b3e94a708c8",
      "name": "/v2/products",
      "item": [
        {
          "_postman_id": "2160a492-9fc4-45c0-a127-38672b2de439",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "9a748f68-e14d-4dcd-acb1-6ead6b63295f",
              "name": "No limit",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 10 products when no limits are applied\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(10);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "9797f29f-30ac-4c74-a4ad-9ad5dbf459e5",
              "name": "Category - New Arrivals",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(3);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=10",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "918fccdc-6824-4e1d-b2ed-4169f002a611",
              "name": "Category - does not exist",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Get category does not exist error\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=99999",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "99999"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "18433aeb-8fda-457c-94af-639bb9fb9659",
              "name": "Page 1, Limit 4",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(4);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?page=1&limit=4",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "4"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "3f288b29-f9a4-4231-8276-6193e2470732",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "fc5e4102-3b36-4ebf-8730-1c62007ca83c",
              "name": "No limit",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 10 products when no limits are applied\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(10);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "521655bf-5af0-42ff-8510-ec47a3d8aaa6",
              "name": "Category - New Arrivals",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(3);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=10",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "7c06b13d-c13a-4d34-ab95-927f596ea46a",
              "name": "Category - does not exist",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Get category does not exist error\", function () {",
                      "    pm.response.to.have.status(400);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?category_id=99999",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "category_id",
                      "value": "99999"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "c73ed9ef-feb2-42e7-ba91-302cfe912f20",
              "name": "Page 1, Limit 4",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Retrieved 3 products from New Arrivals category\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var count = Object.keys(jsonData).length;",
                      "    pm.expect(count).to.eql(4);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}?page=1&limit=4",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "4"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "c8ecac56-5083-4a59-bce0-8b6433035ba9",
      "name": "/v2/products/:id",
      "item": [
        {
          "_postman_id": "bb4734ac-b6bd-4b49-a24c-a61c7baf0076",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "2e90ff66-d2ef-4f38-8222-191e7cfea1c0",
              "name": "Bundled: 447",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed bundled. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('bundle');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('447');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/447",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "447"
                  ]
                },
                "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
              },
              "response": []
            },
            {
              "_postman_id": "c59ce9a8-4aff-4a9e-8185-3208dd3364a5",
              "name": "Configurable: Skirt",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed configurable. Has stock data. Customer grp 0. Has children.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('configurable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('422');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "    pm.expect(jsonData.children.attributes['92'].id).to.eql('92');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/422",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "422"
                  ]
                },
                "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
              },
              "response": []
            },
            {
              "_postman_id": "4f49bc0e-0307-47c5-b20b-378ab2df479b",
              "name": "Downloadable: 563",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed donwloadable. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('downloadable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('563');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/563",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "563"
                  ]
                },
                "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
              },
              "response": []
            },
            {
              "_postman_id": "5b8cd15c-8b62-45f1-ac5d-6a1a5a76a29a",
              "name": "Grouped: 439",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed grouped. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('grouped');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('439');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/439",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "439"
                  ]
                },
                "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
              },
              "response": []
            },
            {
              "_postman_id": "09a2cdc3-b443-4d78-92e8-b94ef12a4a37",
              "name": "Nominal: 564",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed nominal. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('virtual');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('564');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "    pm.expect(jsonData.recurring_profile.start_date_is_editable).to.eql('1');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/564",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "564"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "9bb2b2bf-8951-489b-8a2c-e37dffd6fa1b",
              "name": "Simple: 554",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data. Customer grp 0. No options.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('554');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "    pm.expect(jsonData.has_options).to.eql('0');",
                      "    pm.expect(jsonData.required_options).to.eql('0');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/554",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "554"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "745e0c51-9387-4890-a82f-91e63ba7c76d",
              "name": "Simple: 370 + Options",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data. Customer grp 0.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('370');",
                      "    pm.expect(jsonData.customer_group_id).to.eql(0);",
                      "});",
                      "",
                      "pm.test(\"Product indeed has custom options\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.has_custom_options).to.be.true;",
                      "    pm.expect(jsonData.custom_options[0].product_id).to.eql('370');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/370",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "370"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "a6f31607-a121-4187-bfd9-d1e3d15ebb06",
              "name": "GiftCard Physical/dropdown: 454",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8f139093-c317-437e-b371-544698256bd2",
                    "type": "text/javascript",
                    "exec": [
                      "//Testing for EE edition specifics",
                      "var jsonData = pm.response.json();",
                      "if (pm.variables.get(\"mage_type\") === 'EE') {",
                      "    pm.test(\"Status code is 200\", function () {",
                      "        pm.response.to.have.status(200);",
                      "    });",
                      "",
                      "    pm.test(\"Product is indeed GC. Has stock data. \", function () {",
                      "        ",
                      "        pm.expect(jsonData.type_id).to.eql('giftcard');",
                      "        pm.expect(jsonData.stock_item.product_id).to.eql('454');",
                      "    });",
                      "} else {",
                      "    pm.test(\"Product is not visible individually\", function () {",
                      "        pm.response.to.have.status(404);",
                      "    });",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{guest-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/454",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "454"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "3008cfbf-e90b-497b-961b-d0a12fc6d228",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "f9268f77-3b24-4650-8047-204636727bee",
              "name": "Bundled: 447",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed bundled. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('bundle');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('447');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/447",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "447"
                  ]
                },
                "description": "ID: 447\nType: Bundle\nName: Pillow and Throw Set\nSKU (dynamic): hdb010\nURL: pillow-and-throw-set\nCategory: Home & Decor -> Bed & Bath\nPrice: N/A\n\nBundle Items:\nTitle: Accent Pillow\nID: 24\nName: Titian Raw Silk Pillow | Shay Printed Pillow\nSKU: hdb005 | hdb006\nID: 381 | 382\nSelection ID: 91 | 92\nPrice: 125.00 | 210.00\n\nTitle: Decorative Throw\nID: 23\nName: Carnegie Alpaca Throw | Row Throw | Gramercy Throw\nSKU: hdb007 | hdb008 | hdb009\nID: 383 | 384 | 385\nPrice: 275.00 | 240.00 | 275.00\nSelection ID: 88 | 89 | 115"
              },
              "response": []
            },
            {
              "_postman_id": "cb6ff129-8d1a-41b5-b751-1f5905078405",
              "name": "Configurable: Skirt",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed configurable. Has stock data. Has children.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('configurable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('422');",
                      "    pm.expect(jsonData.children.attributes['92'].id).to.eql('92');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/422",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "422"
                  ]
                },
                "description": "ID: 422\nType: Configurable\nName: Essex Pencil Skirt\nSKU: wsd000c\nCategory: Dresses & Skirts\nPrice: $185.00\n\nSub-Products:\nID: 297 | 298 | 299 | 300 | 301\nName: Essex Pencil Skirt\nSKU: wsd000 | wsd001 | wsd002 | wsd003 | wsd004\nColor (ID: 92): Charcoal (ID: 17)\nSize (ID: 180): 2 (ID: 76) | 4 (ID: 75) | 6 (ID: 74) | 8 (ID: 73) | 10 (ID: 72)"
              },
              "response": []
            },
            {
              "_postman_id": "f1b749fc-9c17-430a-8529-5d888477e05c",
              "name": "Downloadable: 563",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed donwloadable. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('downloadable');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('563');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/563",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "563"
                  ]
                },
                "description": "ID: 563\nName: Fire [Kalima remix] by Unannounced Guest\nSKU: hbm010\nCategory: Music & Books\nURL: fire-kalima-remix-by-unannounced-guest\nPrice: 2.00\nQty: 1000"
              },
              "response": []
            },
            {
              "_postman_id": "ad6e4db2-8248-47f6-a7ff-0b3c31b185b3",
              "name": "Grouped: 439",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed grouped. Has stock data. Customer grp 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('grouped');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('439');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/439",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "439"
                  ]
                },
                "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
              },
              "response": []
            },
            {
              "_postman_id": "55933372-c3d9-412c-86e3-33ebe3f5abae",
              "name": "Nominal: 564",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed nominal. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('virtual');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('564');",
                      "    pm.expect(jsonData.recurring_profile.start_date_is_editable).to.eql('1');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/564",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "564"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "5f8e19db-5bd5-4aa2-9ea1-ef08789cb886",
              "name": "Simple: 554",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data. No options.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('554');",
                      "    pm.expect(jsonData.has_options).to.eql('0');",
                      "    pm.expect(jsonData.required_options).to.eql('0');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/554",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "554"
                  ]
                },
                "description": "ID: 554\nType: Simple\nName: Swiss Movement Sports Watch\nSKU: acj005\nURL: swiss-movement-sports-watch\nCategory: Jewelry\nPrice: $500.00\nQty: 3"
              },
              "response": []
            },
            {
              "_postman_id": "2f29f0d2-5dff-4c8c-ae38-e46e4b30d771",
              "name": "Simple: 370 + Options",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Product is indeed simple. Has stock data.\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.type_id).to.eql('simple');",
                      "    pm.expect(jsonData.stock_item.product_id).to.eql('370');",
                      "});",
                      "",
                      "pm.test(\"Product indeed has custom options\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.has_custom_options).to.be.true;",
                      "    pm.expect(jsonData.custom_options[0].product_id).to.eql('370');",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/370",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "370"
                  ]
                }
              },
              "response": []
            },
            {
              "_postman_id": "f566958d-7679-41cf-b7b1-ce68d9826c55",
              "name": "GiftCard Physical/dropdown: 454",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fff5006d-d64d-4a12-bd06-e20c18783d7c",
                    "type": "text/javascript",
                    "exec": [
                      "//Testing for EE edition specifics",
                      "var jsonData = pm.response.json();",
                      "if (pm.variables.get(\"mage_type\") === 'EE') {",
                      "    pm.test(\"Status code is 200\", function () {",
                      "        pm.response.to.have.status(200);",
                      "    });",
                      "",
                      "    pm.test(\"Product is indeed GC. Has stock data. \", function () {",
                      "        ",
                      "        pm.expect(jsonData.type_id).to.eql('giftcard');",
                      "        pm.expect(jsonData.stock_item.product_id).to.eql('454');",
                      "    });",
                      "} else {",
                      "    pm.test(\"Product is not visible individually\", function () {",
                      "        pm.response.to.have.status(404);",
                      "    });",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{customer-access-token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_products}}/454",
                  "host": [
                    "{{domain}}{{endpoint_products}}"
                  ],
                  "path": [
                    "454"
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "34c494c2-03c9-46b0-89d8-1baf7e427a49",
      "name": "Cart Rules (no coupon)",
      "item": [
        {
          "_postman_id": "8531acb0-48b0-4e91-ba1f-caa4975ed6fd",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "b670f52f-4a39-49dd-8d6d-68e574358a43",
              "name": "Buy X get Y free",
              "item": [
                {
                  "_postman_id": "8e50f006-c166-4ce4-8ba3-d14a5959eabd",
                  "name": "Create customer cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a customer cart"
                  },
                  "response": []
                },
                {
                  "_postman_id": "241a1b49-e1a3-49d4-97fb-339381d890c7",
                  "name": "Add Configurable: Boots",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \t\"product\": {\n\t\t    \"product_id\": \"431\",\n\t\t    \"qty\": 2,\n\t\t    \"super_attribute\": {\n\t\t\t      \"92\": \"20\",\n\t\t\t      \"186\": \"102\"\n\t\t\t}\n\t\t}\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 431\nType: Configurable\nName: Ann Ankle Boot\nSKU: aws005c\nURL: borgha-ankle-boot\nPrice: $470.00\nCategory: Shoes\n\n\nSub-Products:\nID: 345 | 346 | 347 | 348 | 349\nName: Ann Ankle Boot\nSKU: aws005 | aws006 | aws007 | aws008 | aws009\nColor (ID: 92): Black (ID: 20)\nShoe size (ID: 186): 6 (ID: 102) | 7 (ID: 101) | 8 (ID: 100) | 9 (ID: 99) | 10 (ID: 98)"
                  },
                  "response": []
                },
                {
                  "_postman_id": "9c4dadbf-cec2-4011-a49b-ad5151faba11",
                  "name": "Buy one get one free",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d906d273-ecd5-49af-9677-e898deaa3f4c",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Successfully loaded cart via ME endpoint\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "pm.test(\"Boots in cart with one added free\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    pm.expect(parseFloat(jsonData.items_count)).to.eq(1);",
                          "    pm.expect(parseFloat(jsonData.items_qty)).to.eq(2);",
                          "    pm.expect(parseFloat(jsonData.grand_total)).to.be.lt(471);",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{customer-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/me",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "me"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "description": "This cart rule ID is 38. Needs to have 2+ items from category Shoes to make one free. 1 use per customer. Customer group: General, VIP, Private Sales Member(EE)",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "13e930a4-27eb-4d68-9720-f5eff3c926d2",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "950f2d6a-9c9b-400e-9afc-6e2b1679baa8",
              "name": "Qty > 5",
              "item": [
                {
                  "_postman_id": "f3abee48-c7e0-484d-8121-950919c482dc",
                  "name": "/carts: Guest Cart",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = pm.response.json();",
                          "if (responseCode.code === 200 && jsonData.hasOwnProperty('cartId')) {",
                          "    pm.environment.set(\"cartId\", jsonData.cartId);",
                          "    tests[\"Cart ID is returned\"] = isNumeric(jsonData.cartId) === true;",
                          "} else {",
                          "    tests[\"Cart ID is not returned\"] = false;",
                          "}",
                          "",
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});",
                          "",
                          "function isNumeric(n) {",
                          "  return !isNaN(parseFloat(n)) && isFinite(n);",
                          "}"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ]
                    },
                    "description": "Creates a guest cart and assigns the local cartId variable from the one returned"
                  },
                  "response": []
                },
                {
                  "_postman_id": "c451e55b-d3b2-4156-a4e6-26c5b05041ac",
                  "name": "Add grouped: qty6",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test('Successfull call', function(){",
                          "    pm.response.to.be.success;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "[\n  {\n    \"product\": {\n\t    \"product_id\": \"439\",\n\t    \"qty\": 1,\n\t    \"super_group\": {\n\t      \"541\" : 6\n\t    }\n\t  }\n  }\n]"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts_id_items}}",
                      "host": [
                        "{{domain}}{{endpoint_carts_id_items}}"
                      ]
                    },
                    "description": "ID: 439\nName: Luggage Set\nType: Grouped\nSKU: abl008\nURL: luggage-set\nCategory: Bags & Luggage\n\nSub-Product:\nID: 541 | 377 | 376\nName: Classic Hardshell Suitcase 19\" | Classic Hardshell Suitcase 29\" | Classic Hardshell Suitcase 21\"\nSKU: abl009 | abl007 | abl006\nPrice: 600.00 | 750.00 | 650.00\nQty: 7 | 13 | 15"
                  },
                  "response": []
                },
                {
                  "_postman_id": "fd68a6f0-d133-4a25-9506-c1a952e046fe",
                  "name": "Cart has discount",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//Tests customer segments, but they are a tricky beast as they get picked up",
                          "//from customer frontend session + log. This needs to be revistied.",
                          "if (pm.environment.get(\"mage_type\") === 'EE' && false) {",
                          "    pm.test(\"We have a 15 off discount\", function () {",
                          "        var jsonData = pm.response.json();",
                          "        pm.expect(jsonData.totals.discount.value).to.eql(\"-15.0000\");",
                          "    });",
                          "}",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{guest-access-token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{domain}}{{endpoint_carts}}/{{cartId}}",
                      "host": [
                        "{{domain}}{{endpoint_carts}}"
                      ],
                      "path": [
                        "{{cartId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "description": "Tests cart rule combinations that do not have a coupon code attached to them"
    },
    {
      "_postman_id": "cb1f2025-9724-48e2-a91c-acfadfc19000",
      "name": "/v2/categories",
      "item": [
        {
          "_postman_id": "a15587c7-7bdf-4717-9bda-537eca1a77fb",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "e65d8c3f-e6a0-421a-9fa6-1644dc029ce1",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{customer-access-token}}",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d0079da7-ef5b-476f-a922-53fadcc3b9ba",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c3bb5423-bf5c-461f-821c-10556c7d9556",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "2cdeb1cd-b647-416f-9e6a-72b4810b186e",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "9ddd726c-13ff-40a0-a2ca-296e188a7dff",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{guest-access-token}}",
                "type": "string"
              }
            ]
          },
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "fe26685b-9ff8-4b46-bec4-923ed8ab8dc7",
      "name": "/v2/categories/:id",
      "item": [
        {
          "_postman_id": "e84dd8be-21bd-4838-aba1-5e300d004784",
          "name": "Customer",
          "item": [
            {
              "_postman_id": "8868cf17-cd8b-41c2-9f0d-b6a57456f75f",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}/1",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ],
                  "path": [
                    "1"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{customer-access-token}}",
                "type": "string"
              }
            ]
          },
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "d0079da7-ef5b-476f-a922-53fadcc3b9ba",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "c3bb5423-bf5c-461f-821c-10556c7d9556",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "26dbab3d-7b91-4e03-8018-fe1ab15d8ee0",
          "name": "Guest",
          "item": [
            {
              "_postman_id": "d1fc89f6-d4ff-48b0-a26d-2b4b1a51954e",
              "name": "Simple call",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b53f6b5-075c-4361-a55f-45d79c65c871",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 404\", function () {",
                      "    pm.response.to.have.status(404);",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{domain}}{{endpoint_categories}}/1",
                  "host": [
                    "{{domain}}{{endpoint_categories}}"
                  ],
                  "path": [
                    "1"
                  ]
                }
              },
              "response": []
            }
          ],
          "auth": {
            "type": "bearer",
            "bearer": [
              {
                "key": "token",
                "value": "{{guest-access-token}}",
                "type": "string"
              }
            ]
          },
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "3e106888-070c-492e-af75-cec3d20d6d87",
      "name": "auth/token: CORS",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "a1b98b3b-08b0-4097-8485-7897b41843c2",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Successful CORS call per definition\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "tests[\"Body is empty\"] = responseBody === \"\";",
              "tests[\"Allow-Headers is proper\"] = postman.getResponseHeader(\"Access-Control-Allow-Headers\") === 'Content-Type,Version,Authorization,PHP_AUTH_USER,PHP_AUTH_PW';",
              "tests[\"Allow-Methods are proper\"] = postman.getResponseHeader(\"Access-Control-Allow-Methods\") === 'GET, POST, PUT, UPDATE, DELETE, OPTIONS';",
              "tests[\"Allow-Origin is *\"] = postman.getResponseHeader(\"Access-Control-Allow-Origin\") === '*';"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Access-Control-Request-Method",
            "value": "POST"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": {
          "raw": "{{domain}}{{endpoint_auth_token}}",
          "host": [
            "{{domain}}{{endpoint_auth_token}}"
          ]
        }
      },
      "response": []
    }
  ]
}
